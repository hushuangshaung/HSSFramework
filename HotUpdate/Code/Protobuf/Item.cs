// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from item.proto</summary>
public static partial class ItemReflection {

  #region Descriptor
  /// <summary>File descriptor for item.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ItemReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgppdGVtLnByb3RvGgpiZWFuLnByb3RvIg0KC0l0ZW1MaXN0UmVxIiYKDEl0",
          "ZW1MaXN0UmVzcBIWCgVpdGVtcxgBIAEoCzIHLkl0ZW1QYiJCCgpJdGVtVXNl",
          "UmVxEg4KBml0ZW1JZBgBIAEoBRIOCgZ1c2VOdW0YAiABKAUSFAoMc2VsZWN0",
          "ZWRJdGVtGAMgAygFIoIBCgtJdGVtVXNlUmVzcBIwCgpjaGFuZ2VJdGVtGAEg",
          "AygLMhwuSXRlbVVzZVJlc3AuQ2hhbmdlSXRlbUVudHJ5Eg4KBnJld2FyZBgC",
          "IAMoBRoxCg9DaGFuZ2VJdGVtRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVl",
          "GAIgASgFOgI4AUIUCgpjb20uY2IubXNnQgZQQkl0ZW1iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BeanReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ItemListReq), global::ItemListReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ItemListResp), global::ItemListResp.Parser, new[]{ "Items" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ItemUseReq), global::ItemUseReq.Parser, new[]{ "ItemId", "UseNum", "SelectedItem" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ItemUseResp), global::ItemUseResp.Parser, new[]{ "ChangeItem", "Reward" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///登录
/// </summary>
public sealed partial class ItemListReq : pb::IMessage<ItemListReq> {
  private static readonly pb::MessageParser<ItemListReq> _parser = new pb::MessageParser<ItemListReq>(() => new ItemListReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ItemListReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ItemReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemListReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemListReq(ItemListReq other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemListReq Clone() {
    return new ItemListReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ItemListReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ItemListReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ItemListReq other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class ItemListResp : pb::IMessage<ItemListResp> {
  private static readonly pb::MessageParser<ItemListResp> _parser = new pb::MessageParser<ItemListResp>(() => new ItemListResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ItemListResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ItemReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemListResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemListResp(ItemListResp other) : this() {
    Items = other.items_ != null ? other.Items.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemListResp Clone() {
    return new ItemListResp(this);
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 1;
  private global::ItemPb items_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ItemPb Items {
    get { return items_; }
    set {
      items_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ItemListResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ItemListResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Items, other.Items)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (items_ != null) hash ^= Items.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (items_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Items);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (items_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Items);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ItemListResp other) {
    if (other == null) {
      return;
    }
    if (other.items_ != null) {
      if (items_ == null) {
        items_ = new global::ItemPb();
      }
      Items.MergeFrom(other.Items);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (items_ == null) {
            items_ = new global::ItemPb();
          }
          input.ReadMessage(items_);
          break;
        }
      }
    }
  }

}

/// <summary>
///使用道具
/// </summary>
public sealed partial class ItemUseReq : pb::IMessage<ItemUseReq> {
  private static readonly pb::MessageParser<ItemUseReq> _parser = new pb::MessageParser<ItemUseReq>(() => new ItemUseReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ItemUseReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ItemReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemUseReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemUseReq(ItemUseReq other) : this() {
    itemId_ = other.itemId_;
    useNum_ = other.useNum_;
    selectedItem_ = other.selectedItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemUseReq Clone() {
    return new ItemUseReq(this);
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private int itemId_;
  /// <summary>
  ///使用的道具id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "useNum" field.</summary>
  public const int UseNumFieldNumber = 2;
  private int useNum_;
  /// <summary>
  ///使用的道具数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UseNum {
    get { return useNum_; }
    set {
      useNum_ = value;
    }
  }

  /// <summary>Field number for the "selectedItem" field.</summary>
  public const int SelectedItemFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_selectedItem_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> selectedItem_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///选择的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> SelectedItem {
    get { return selectedItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ItemUseReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ItemUseReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (UseNum != other.UseNum) return false;
    if(!selectedItem_.Equals(other.selectedItem_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (UseNum != 0) hash ^= UseNum.GetHashCode();
    hash ^= selectedItem_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (UseNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UseNum);
    }
    selectedItem_.WriteTo(output, _repeated_selectedItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
    }
    if (UseNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseNum);
    }
    size += selectedItem_.CalculateSize(_repeated_selectedItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ItemUseReq other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.UseNum != 0) {
      UseNum = other.UseNum;
    }
    selectedItem_.Add(other.selectedItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          UseNum = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          selectedItem_.AddEntriesFrom(input, _repeated_selectedItem_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ItemUseResp : pb::IMessage<ItemUseResp> {
  private static readonly pb::MessageParser<ItemUseResp> _parser = new pb::MessageParser<ItemUseResp>(() => new ItemUseResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ItemUseResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ItemReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemUseResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemUseResp(ItemUseResp other) : this() {
    changeItem_ = other.changeItem_.Clone();
    reward_ = other.reward_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemUseResp Clone() {
    return new ItemUseResp(this);
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///固定改变道具，客户端直接用k,v进行道具覆盖
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_reward_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> reward_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///新获得的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Reward {
    get { return reward_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ItemUseResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ItemUseResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    if(!reward_.Equals(other.reward_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ChangeItem.GetHashCode();
    hash ^= reward_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    changeItem_.WriteTo(output, _map_changeItem_codec);
    reward_.WriteTo(output, _repeated_reward_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    size += reward_.CalculateSize(_repeated_reward_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ItemUseResp other) {
    if (other == null) {
      return;
    }
    changeItem_.Add(other.changeItem_);
    reward_.Add(other.reward_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
        case 18:
        case 16: {
          reward_.AddEntriesFrom(input, _repeated_reward_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
