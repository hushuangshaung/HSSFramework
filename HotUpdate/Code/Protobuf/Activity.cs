// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from activity.proto</summary>
public static partial class ActivityReflection {

  #region Descriptor
  /// <summary>File descriptor for activity.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ActivityReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5hY3Rpdml0eS5wcm90bxoKYmVhbi5wcm90byIlCgxTaWduSW5mb1Jlc3AS",
          "FQoEc2lnbhgBIAEoCzIHLlNpZ25QYiJXCghTaWduUmVzcBIVCgRzaWduGAEg",
          "ASgLMgcuU2lnblBiEhUKBGl0ZW0YAiABKAsyBy5JdGVtUGISHQoIdHJlYXN1",
          "cmUYAyABKAsyCy5UcmVhc3VyZVBiIikKCldlbGZhcmVSZXESCgoCaWQYASAB",
          "KAUSDwoHb3JkZXJpZBgCIAEoCSKaAgoLV2VsZmFyZVJlc3ASKgoHYWRkSXRl",
          "bRgBIAMoCzIZLldlbGZhcmVSZXNwLkFkZEl0ZW1FbnRyeRIwCgpjaGFuZ2VJ",
          "dGVtGAIgAygLMhwuV2VsZmFyZVJlc3AuQ2hhbmdlSXRlbUVudHJ5EhkKBWVx",
          "dWlwGAMgASgLMgouRXF1aXBWMlBiEhwKCW5ld1RhbGVudBgEIAEoCzIJLlRh",
          "bGVudFBiEhEKCXdlbGZhcmVJZBgFIAEoBRouCgxBZGRJdGVtRW50cnkSCwoD",
          "a2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ARoxCg9DaGFuZ2VJdGVtRW50",
          "cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASKrAQoNWHlHaWZ0",
          "QmFnUmVzcBIQCgh4eUJ1eUlkcxgBIAMoBRJAChF4eUdpdEJhZ0ZyZWVUaW1l",
          "cxgCIAMoCzIlLlh5R2lmdEJhZ1Jlc3AuWHlHaXRCYWdGcmVlVGltZXNFbnRy",
          "eRIMCgR4eUNkGAMgASgFGjgKFlh5R2l0QmFnRnJlZVRpbWVzRW50cnkSCwoD",
          "a2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASIuCg9YeUdpZnRCYWdCdXlS",
          "ZXESCgoCaWQYASABKAUSDwoHb3JkZXJpZBgCIAEoCSL2AgoQWHlHaWZ0QmFn",
          "QnV5UmVzcBIKCgJpZBgBIAEoBRIvCgdhZGRJdGVtGAIgAygLMh4uWHlHaWZ0",
          "QmFnQnV5UmVzcC5BZGRJdGVtRW50cnkSNQoKY2hhbmdlSXRlbRgDIAMoCzIh",
          "Llh5R2lmdEJhZ0J1eVJlc3AuQ2hhbmdlSXRlbUVudHJ5EgwKBHh5Q2QYBCAB",
          "KAUSQwoReHlHaXRCYWdGcmVlVGltZXMYBSADKAsyKC5YeUdpZnRCYWdCdXlS",
          "ZXNwLlh5R2l0QmFnRnJlZVRpbWVzRW50cnkaLgoMQWRkSXRlbUVudHJ5EgsK",
          "A2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEaMQoPQ2hhbmdlSXRlbUVu",
          "dHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEaOAoWWHlHaXRC",
          "YWdGcmVlVGltZXNFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6",
          "AjgBIjEKEkV2ZXJ5RGF5R2lmdEJ1eVJlcRIKCgJpZBgBIAEoBRIPCgdvcmRl",
          "cmlkGAIgASgJIp0BChNFdmVyeURheUdpZnRCdXlSZXNwEgoKAmlkGAEgASgF",
          "Eg0KBXRpbWVzGAIgASgFEjgKCmNoYW5nZUl0ZW0YAyADKAsyJC5FdmVyeURh",
          "eUdpZnRCdXlSZXNwLkNoYW5nZUl0ZW1FbnRyeRoxCg9DaGFuZ2VJdGVtRW50",
          "cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASIiChREYXlSZWNo",
          "YXJnZVJld2FyZFJlcRIKCgJpZBgBIAEoBSKSAQoVRGF5UmVjaGFyZ2VSZXdh",
          "cmRSZXNwEgoKAmlkGAEgASgFEjoKCmNoYW5nZUl0ZW0YAiADKAsyJi5EYXlS",
          "ZWNoYXJnZVJld2FyZFJlc3AuQ2hhbmdlSXRlbUVudHJ5GjEKD0NoYW5nZUl0",
          "ZW1FbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIjYKDUZ1",
          "bmRVbmxvY2tSZXESFAoMZnVuZFVubG9ja0lkGAEgASgFEg8KB29yZGVyaWQY",
          "AiABKAkijgEKDkZ1bmRVbmxvY2tSZXNwEhQKDGZ1bmRVbmxvY2tJZBgBIAEo",
          "BRIzCgpjaGFuZ2VJdGVtGAIgAygLMh8uRnVuZFVubG9ja1Jlc3AuQ2hhbmdl",
          "SXRlbUVudHJ5GjEKD0NoYW5nZUl0ZW1FbnRyeRILCgNrZXkYASABKAUSDQoF",
          "dmFsdWUYAiABKAU6AjgBIngKDEZ1bmRMaXN0UmVzcBIUCgxmdW5kVW5sb2Nr",
          "SWQYASADKAUSJQoEZnVuZBgCIAMoCzIXLkZ1bmRMaXN0UmVzcC5GdW5kRW50",
          "cnkaKwoJRnVuZEVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToC",
          "OAEiGwoNRnVuZFJld2FyZFJlcRIKCgJpZBgBIAEoBSKtAgoORnVuZFJld2Fy",
          "ZFJlc3ASJwoEZnVuZBgBIAMoCzIZLkZ1bmRSZXdhcmRSZXNwLkZ1bmRFbnRy",
          "eRItCgdhZGRJdGVtGAIgAygLMhwuRnVuZFJld2FyZFJlc3AuQWRkSXRlbUVu",
          "dHJ5EjMKCmNoYW5nZUl0ZW0YAyADKAsyHy5GdW5kUmV3YXJkUmVzcC5DaGFu",
          "Z2VJdGVtRW50cnkaKwoJRnVuZEVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1",
          "ZRgCIAEoBToCOAEaLgoMQWRkSXRlbUVudHJ5EgsKA2tleRgBIAEoBRINCgV2",
          "YWx1ZRgCIAEoBToCOAEaMQoPQ2hhbmdlSXRlbUVudHJ5EgsKA2tleRgBIAEo",
          "BRINCgV2YWx1ZRgCIAEoBToCOAEi7QEKEU1vbnRoQ2FyZExpc3RSZXNwEi4K",
          "BmdldElkcxgBIAMoCzIeLk1vbnRoQ2FyZExpc3RSZXNwLkdldElkc0VudHJ5",
          "EjQKCXJld2FyZERheRgCIAMoCzIhLk1vbnRoQ2FyZExpc3RSZXNwLlJld2Fy",
          "ZERheUVudHJ5EhEKCXNlcnZlckRheRgDIAEoBRotCgtHZXRJZHNFbnRyeRIL",
          "CgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBGjAKDlJld2FyZERheUVu",
          "dHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEiJAoSTW9udGhD",
          "YXJkUmV3YXJkUmVxEg4KBmNhcmRpZBgBIAEoBSKlAQoTTW9udGhDYXJkUmV3",
          "YXJkUmVzcBIOCgZjYXJkaWQYASABKAUSEQoJcmV3YXJkRGF5GAIgASgFEjgK",
          "CmNoYW5nZUl0ZW0YAyADKAsyJC5Nb250aENhcmRSZXdhcmRSZXNwLkNoYW5n",
          "ZUl0ZW1FbnRyeRoxCg9DaGFuZ2VJdGVtRW50cnkSCwoDa2V5GAEgASgFEg0K",
          "BXZhbHVlGAIgASgFOgI4ASI1ChJNb250aENhcmRDaGFyZ2VSZXESDgoGY2Fy",
          "ZGlkGAEgASgFEg8KB29yZGVyaWQYAiABKAkiiQIKE01vbnRoQ2FyZENoYXJn",
          "ZVJlc3ASDgoGY2FyZGlkGAEgASgFEjIKB2FkZEl0ZW0YAiADKAsyIS5Nb250",
          "aENhcmRDaGFyZ2VSZXNwLkFkZEl0ZW1FbnRyeRI4CgpjaGFuZ2VJdGVtGAMg",
          "AygLMiQuTW9udGhDYXJkQ2hhcmdlUmVzcC5DaGFuZ2VJdGVtRW50cnkSEQoJ",
          "cmV3YXJkRGF5GAQgASgFGi4KDEFkZEl0ZW1FbnRyeRILCgNrZXkYASABKAUS",
          "DQoFdmFsdWUYAiABKAU6AjgBGjEKD0NoYW5nZUl0ZW1FbnRyeRILCgNrZXkY",
          "ASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIn8KEFdlZWtHaWZ0RGF0YVJlc3AS",
          "NwoLd2Vla0dpZnRCdXkYASADKAsyIi5XZWVrR2lmdERhdGFSZXNwLldlZWtH",
          "aWZ0QnV5RW50cnkaMgoQV2Vla0dpZnRCdXlFbnRyeRILCgNrZXkYASABKAUS",
          "DQoFdmFsdWUYAiABKAU6AjgBIi0KDldlZWtHaWZ0QnV5UmVxEgoKAmlkGAEg",
          "ASgFEg8KB29yZGVyaWQYAiABKAkimAEKD1dlZWtHaWZ0QnV5UmVzcBIKCgJp",
          "ZBgBIAEoBRIQCghidXlUaW1lcxgCIAEoBRI0CgpjaGFuZ2VJdGVtGAMgAygL",
          "MiAuV2Vla0dpZnRCdXlSZXNwLkNoYW5nZUl0ZW1FbnRyeRoxCg9DaGFuZ2VJ",
          "dGVtRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASIhChNM",
          "aW1pdFRpbWVHaWZ0QnV5UmVxEgoKAmlkGAEgASgFIpABChRMaW1pdFRpbWVH",
          "aWZ0QnV5UmVzcBIKCgJpZBgBIAEoBRI5CgpjaGFuZ2VJdGVtGAIgAygLMiUu",
          "TGltaXRUaW1lR2lmdEJ1eVJlc3AuQ2hhbmdlSXRlbUVudHJ5GjEKD0NoYW5n",
          "ZUl0ZW1FbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIi4K",
          "D0Nsb3VkR2lmdEJ1eVJlcRIKCgJpZBgBIAEoBRIPCgdvcmRlcmlkGAIgASgJ",
          "IukBChBDbG91ZEdpZnRCdXlSZXNwEgoKAmlkGAEgASgFEjUKCmNoYW5nZUl0",
          "ZW0YAiADKAsyIS5DbG91ZEdpZnRCdXlSZXNwLkNoYW5nZUl0ZW1FbnRyeRIv",
          "CgdmdW5lTnVtGAMgAygLMh4uQ2xvdWRHaWZ0QnV5UmVzcC5GdW5lTnVtRW50",
          "cnkaMQoPQ2hhbmdlSXRlbUVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgC",
          "IAEoBToCOAEaLgoMRnVuZU51bUVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1",
          "ZRgCIAEoBToCOAEiKwoYQ2xvdWRQcml2aWxlZ2VHaWZ0QnV5UmVxEg8KB29y",
          "ZGVyaWQYAiABKAkijgEKGUNsb3VkUHJpdmlsZWdlR2lmdEJ1eVJlc3ASPgoK",
          "Y2hhbmdlSXRlbRgBIAMoCzIqLkNsb3VkUHJpdmlsZWdlR2lmdEJ1eVJlc3Au",
          "Q2hhbmdlSXRlbUVudHJ5GjEKD0NoYW5nZUl0ZW1FbnRyeRILCgNrZXkYASAB",
          "KAUSDQoFdmFsdWUYAiABKAU6AjgBIkIKGkNsb3VkUHJpdmlsZWdlR2lmdFRl",
          "c3RSZXNwEhMKC3Rlc3RFbmRUaW1lGAEgASgFEg8KB3Rlc3ROdW0YAiABKAVC",
          "GAoKY29tLmNiLm1zZ0IKUEJBY3Rpdml0eWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BeanReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::SignInfoResp), global::SignInfoResp.Parser, new[]{ "Sign" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SignResp), global::SignResp.Parser, new[]{ "Sign", "Item", "Treasure" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WelfareReq), global::WelfareReq.Parser, new[]{ "Id", "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WelfareResp), global::WelfareResp.Parser, new[]{ "AddItem", "ChangeItem", "Equip", "NewTalent", "WelfareId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::XyGiftBagResp), global::XyGiftBagResp.Parser, new[]{ "XyBuyIds", "XyGitBagFreeTimes", "XyCd" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::XyGiftBagBuyReq), global::XyGiftBagBuyReq.Parser, new[]{ "Id", "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::XyGiftBagBuyResp), global::XyGiftBagBuyResp.Parser, new[]{ "Id", "AddItem", "ChangeItem", "XyCd", "XyGitBagFreeTimes" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::EveryDayGiftBuyReq), global::EveryDayGiftBuyReq.Parser, new[]{ "Id", "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EveryDayGiftBuyResp), global::EveryDayGiftBuyResp.Parser, new[]{ "Id", "Times", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::DayRechargeRewardReq), global::DayRechargeRewardReq.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DayRechargeRewardResp), global::DayRechargeRewardResp.Parser, new[]{ "Id", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::FundUnlockReq), global::FundUnlockReq.Parser, new[]{ "FundUnlockId", "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FundUnlockResp), global::FundUnlockResp.Parser, new[]{ "FundUnlockId", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::FundListResp), global::FundListResp.Parser, new[]{ "FundUnlockId", "Fund" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::FundRewardReq), global::FundRewardReq.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FundRewardResp), global::FundRewardResp.Parser, new[]{ "Fund", "AddItem", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::MonthCardListResp), global::MonthCardListResp.Parser, new[]{ "GetIds", "RewardDay", "ServerDay" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::MonthCardRewardReq), global::MonthCardRewardReq.Parser, new[]{ "Cardid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MonthCardRewardResp), global::MonthCardRewardResp.Parser, new[]{ "Cardid", "RewardDay", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::MonthCardChargeReq), global::MonthCardChargeReq.Parser, new[]{ "Cardid", "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MonthCardChargeResp), global::MonthCardChargeResp.Parser, new[]{ "Cardid", "AddItem", "ChangeItem", "RewardDay" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::WeekGiftDataResp), global::WeekGiftDataResp.Parser, new[]{ "WeekGiftBuy" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::WeekGiftBuyReq), global::WeekGiftBuyReq.Parser, new[]{ "Id", "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WeekGiftBuyResp), global::WeekGiftBuyResp.Parser, new[]{ "Id", "BuyTimes", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::LimitTimeGiftBuyReq), global::LimitTimeGiftBuyReq.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LimitTimeGiftBuyResp), global::LimitTimeGiftBuyResp.Parser, new[]{ "Id", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CloudGiftBuyReq), global::CloudGiftBuyReq.Parser, new[]{ "Id", "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CloudGiftBuyResp), global::CloudGiftBuyResp.Parser, new[]{ "Id", "ChangeItem", "FuneNum" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CloudPrivilegeGiftBuyReq), global::CloudPrivilegeGiftBuyReq.Parser, new[]{ "Orderid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CloudPrivilegeGiftBuyResp), global::CloudPrivilegeGiftBuyResp.Parser, new[]{ "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CloudPrivilegeGiftTestResp), global::CloudPrivilegeGiftTestResp.Parser, new[]{ "TestEndTime", "TestNum" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// 7日签到 --req nil
/// </summary>
public sealed partial class SignInfoResp : pb::IMessage<SignInfoResp> {
  private static readonly pb::MessageParser<SignInfoResp> _parser = new pb::MessageParser<SignInfoResp>(() => new SignInfoResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SignInfoResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SignInfoResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SignInfoResp(SignInfoResp other) : this() {
    Sign = other.sign_ != null ? other.Sign.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SignInfoResp Clone() {
    return new SignInfoResp(this);
  }

  /// <summary>Field number for the "sign" field.</summary>
  public const int SignFieldNumber = 1;
  private global::SignPb sign_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SignPb Sign {
    get { return sign_; }
    set {
      sign_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SignInfoResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SignInfoResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Sign, other.Sign)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (sign_ != null) hash ^= Sign.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (sign_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Sign);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (sign_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sign);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SignInfoResp other) {
    if (other == null) {
      return;
    }
    if (other.sign_ != null) {
      if (sign_ == null) {
        sign_ = new global::SignPb();
      }
      Sign.MergeFrom(other.Sign);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (sign_ == null) {
            sign_ = new global::SignPb();
          }
          input.ReadMessage(sign_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 7日签到 --req nil
/// </summary>
public sealed partial class SignResp : pb::IMessage<SignResp> {
  private static readonly pb::MessageParser<SignResp> _parser = new pb::MessageParser<SignResp>(() => new SignResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SignResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SignResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SignResp(SignResp other) : this() {
    Sign = other.sign_ != null ? other.Sign.Clone() : null;
    Item = other.item_ != null ? other.Item.Clone() : null;
    Treasure = other.treasure_ != null ? other.Treasure.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SignResp Clone() {
    return new SignResp(this);
  }

  /// <summary>Field number for the "sign" field.</summary>
  public const int SignFieldNumber = 1;
  private global::SignPb sign_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SignPb Sign {
    get { return sign_; }
    set {
      sign_ = value;
    }
  }

  /// <summary>Field number for the "item" field.</summary>
  public const int ItemFieldNumber = 2;
  private global::ItemPb item_;
  /// <summary>
  ///可能为nil 为nil的时候不要做处理
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ItemPb Item {
    get { return item_; }
    set {
      item_ = value;
    }
  }

  /// <summary>Field number for the "treasure" field.</summary>
  public const int TreasureFieldNumber = 3;
  private global::TreasurePb treasure_;
  /// <summary>
  ///第7天给法宝
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TreasurePb Treasure {
    get { return treasure_; }
    set {
      treasure_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SignResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SignResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Sign, other.Sign)) return false;
    if (!object.Equals(Item, other.Item)) return false;
    if (!object.Equals(Treasure, other.Treasure)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (sign_ != null) hash ^= Sign.GetHashCode();
    if (item_ != null) hash ^= Item.GetHashCode();
    if (treasure_ != null) hash ^= Treasure.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (sign_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Sign);
    }
    if (item_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Item);
    }
    if (treasure_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Treasure);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (sign_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sign);
    }
    if (item_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
    }
    if (treasure_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Treasure);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SignResp other) {
    if (other == null) {
      return;
    }
    if (other.sign_ != null) {
      if (sign_ == null) {
        sign_ = new global::SignPb();
      }
      Sign.MergeFrom(other.Sign);
    }
    if (other.item_ != null) {
      if (item_ == null) {
        item_ = new global::ItemPb();
      }
      Item.MergeFrom(other.Item);
    }
    if (other.treasure_ != null) {
      if (treasure_ == null) {
        treasure_ = new global::TreasurePb();
      }
      Treasure.MergeFrom(other.Treasure);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (sign_ == null) {
            sign_ = new global::SignPb();
          }
          input.ReadMessage(sign_);
          break;
        }
        case 18: {
          if (item_ == null) {
            item_ = new global::ItemPb();
          }
          input.ReadMessage(item_);
          break;
        }
        case 26: {
          if (treasure_ == null) {
            treasure_ = new global::TreasurePb();
          }
          input.ReadMessage(treasure_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 新人福利购买 --s3方式传输
/// </summary>
public sealed partial class WelfareReq : pb::IMessage<WelfareReq> {
  private static readonly pb::MessageParser<WelfareReq> _parser = new pb::MessageParser<WelfareReq>(() => new WelfareReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WelfareReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WelfareReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WelfareReq(WelfareReq other) : this() {
    id_ = other.id_;
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WelfareReq Clone() {
    return new WelfareReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  ///payItem id,只能购买一次，逐个增进
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WelfareReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WelfareReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WelfareReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class WelfareResp : pb::IMessage<WelfareResp> {
  private static readonly pb::MessageParser<WelfareResp> _parser = new pb::MessageParser<WelfareResp>(() => new WelfareResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WelfareResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WelfareResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WelfareResp(WelfareResp other) : this() {
    addItem_ = other.addItem_.Clone();
    changeItem_ = other.changeItem_.Clone();
    Equip = other.equip_ != null ? other.Equip.Clone() : null;
    NewTalent = other.newTalent_ != null ? other.NewTalent.Clone() : null;
    welfareId_ = other.welfareId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WelfareResp Clone() {
    return new WelfareResp(this);
  }

  /// <summary>Field number for the "addItem" field.</summary>
  public const int AddItemFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_addItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> addItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///获得道具,客户端显示用
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> AddItem {
    get { return addItem_; }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具，客户端维护道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  /// <summary>Field number for the "equip" field.</summary>
  public const int EquipFieldNumber = 3;
  private global::EquipV2Pb equip_;
  /// <summary>
  ///获得的宠物,客户端自己维护到宠物列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EquipV2Pb Equip {
    get { return equip_; }
    set {
      equip_ = value;
    }
  }

  /// <summary>Field number for the "newTalent" field.</summary>
  public const int NewTalentFieldNumber = 4;
  private global::TalentPb newTalent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TalentPb NewTalent {
    get { return newTalent_; }
    set {
      newTalent_ = value;
    }
  }

  /// <summary>Field number for the "welfareId" field.</summary>
  public const int WelfareIdFieldNumber = 5;
  private int welfareId_;
  /// <summary>
  ///新人福利礼包购买过的最新id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WelfareId {
    get { return welfareId_; }
    set {
      welfareId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WelfareResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WelfareResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!AddItem.Equals(other.AddItem)) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    if (!object.Equals(Equip, other.Equip)) return false;
    if (!object.Equals(NewTalent, other.NewTalent)) return false;
    if (WelfareId != other.WelfareId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= AddItem.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    if (equip_ != null) hash ^= Equip.GetHashCode();
    if (newTalent_ != null) hash ^= NewTalent.GetHashCode();
    if (WelfareId != 0) hash ^= WelfareId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    addItem_.WriteTo(output, _map_addItem_codec);
    changeItem_.WriteTo(output, _map_changeItem_codec);
    if (equip_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Equip);
    }
    if (newTalent_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(NewTalent);
    }
    if (WelfareId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(WelfareId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += addItem_.CalculateSize(_map_addItem_codec);
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    if (equip_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equip);
    }
    if (newTalent_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewTalent);
    }
    if (WelfareId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WelfareId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WelfareResp other) {
    if (other == null) {
      return;
    }
    addItem_.Add(other.addItem_);
    changeItem_.Add(other.changeItem_);
    if (other.equip_ != null) {
      if (equip_ == null) {
        equip_ = new global::EquipV2Pb();
      }
      Equip.MergeFrom(other.Equip);
    }
    if (other.newTalent_ != null) {
      if (newTalent_ == null) {
        newTalent_ = new global::TalentPb();
      }
      NewTalent.MergeFrom(other.NewTalent);
    }
    if (other.WelfareId != 0) {
      WelfareId = other.WelfareId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          addItem_.AddEntriesFrom(input, _map_addItem_codec);
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
        case 26: {
          if (equip_ == null) {
            equip_ = new global::EquipV2Pb();
          }
          input.ReadMessage(equip_);
          break;
        }
        case 34: {
          if (newTalent_ == null) {
            newTalent_ = new global::TalentPb();
          }
          input.ReadMessage(newTalent_);
          break;
        }
        case 40: {
          WelfareId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 仙玉礼包信息 --req nil
/// </summary>
public sealed partial class XyGiftBagResp : pb::IMessage<XyGiftBagResp> {
  private static readonly pb::MessageParser<XyGiftBagResp> _parser = new pb::MessageParser<XyGiftBagResp>(() => new XyGiftBagResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<XyGiftBagResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagResp(XyGiftBagResp other) : this() {
    xyBuyIds_ = other.xyBuyIds_.Clone();
    xyGitBagFreeTimes_ = other.xyGitBagFreeTimes_.Clone();
    xyCd_ = other.xyCd_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagResp Clone() {
    return new XyGiftBagResp(this);
  }

  /// <summary>Field number for the "xyBuyIds" field.</summary>
  public const int XyBuyIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_xyBuyIds_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> xyBuyIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///仙玉礼包购买id,购买过的无首充双倍奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> XyBuyIds {
    get { return xyBuyIds_; }
  }

  /// <summary>Field number for the "xyGitBagFreeTimes" field.</summary>
  public const int XyGitBagFreeTimesFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_xyGitBagFreeTimes_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> xyGitBagFreeTimes_ = new pbc::MapField<int, int>();
  /// <summary>
  ///仙玉礼包免费领取次数,key:id val:每日领取次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> XyGitBagFreeTimes {
    get { return xyGitBagFreeTimes_; }
  }

  /// <summary>Field number for the "xyCd" field.</summary>
  public const int XyCdFieldNumber = 3;
  private int xyCd_;
  /// <summary>
  ///仙玉礼包免费领取cd 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int XyCd {
    get { return xyCd_; }
    set {
      xyCd_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as XyGiftBagResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(XyGiftBagResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!xyBuyIds_.Equals(other.xyBuyIds_)) return false;
    if (!XyGitBagFreeTimes.Equals(other.XyGitBagFreeTimes)) return false;
    if (XyCd != other.XyCd) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= xyBuyIds_.GetHashCode();
    hash ^= XyGitBagFreeTimes.GetHashCode();
    if (XyCd != 0) hash ^= XyCd.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    xyBuyIds_.WriteTo(output, _repeated_xyBuyIds_codec);
    xyGitBagFreeTimes_.WriteTo(output, _map_xyGitBagFreeTimes_codec);
    if (XyCd != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(XyCd);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += xyBuyIds_.CalculateSize(_repeated_xyBuyIds_codec);
    size += xyGitBagFreeTimes_.CalculateSize(_map_xyGitBagFreeTimes_codec);
    if (XyCd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(XyCd);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(XyGiftBagResp other) {
    if (other == null) {
      return;
    }
    xyBuyIds_.Add(other.xyBuyIds_);
    xyGitBagFreeTimes_.Add(other.xyGitBagFreeTimes_);
    if (other.XyCd != 0) {
      XyCd = other.XyCd;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10:
        case 8: {
          xyBuyIds_.AddEntriesFrom(input, _repeated_xyBuyIds_codec);
          break;
        }
        case 18: {
          xyGitBagFreeTimes_.AddEntriesFrom(input, _map_xyGitBagFreeTimes_codec);
          break;
        }
        case 24: {
          XyCd = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 仙玉礼包购买 --s3方式传输
/// </summary>
public sealed partial class XyGiftBagBuyReq : pb::IMessage<XyGiftBagBuyReq> {
  private static readonly pb::MessageParser<XyGiftBagBuyReq> _parser = new pb::MessageParser<XyGiftBagBuyReq>(() => new XyGiftBagBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<XyGiftBagBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagBuyReq(XyGiftBagBuyReq other) : this() {
    id_ = other.id_;
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagBuyReq Clone() {
    return new XyGiftBagBuyReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  ///礼包id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as XyGiftBagBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(XyGiftBagBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(XyGiftBagBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 仙玉礼包购买 
/// </summary>
public sealed partial class XyGiftBagBuyResp : pb::IMessage<XyGiftBagBuyResp> {
  private static readonly pb::MessageParser<XyGiftBagBuyResp> _parser = new pb::MessageParser<XyGiftBagBuyResp>(() => new XyGiftBagBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<XyGiftBagBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagBuyResp(XyGiftBagBuyResp other) : this() {
    id_ = other.id_;
    addItem_ = other.addItem_.Clone();
    changeItem_ = other.changeItem_.Clone();
    xyCd_ = other.xyCd_;
    xyGitBagFreeTimes_ = other.xyGitBagFreeTimes_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public XyGiftBagBuyResp Clone() {
    return new XyGiftBagBuyResp(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "addItem" field.</summary>
  public const int AddItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_addItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> addItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///获得的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> AddItem {
    get { return addItem_; }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  /// <summary>Field number for the "xyCd" field.</summary>
  public const int XyCdFieldNumber = 4;
  private int xyCd_;
  /// <summary>
  ///仙玉礼包免费领取cd 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int XyCd {
    get { return xyCd_; }
    set {
      xyCd_ = value;
    }
  }

  /// <summary>Field number for the "xyGitBagFreeTimes" field.</summary>
  public const int XyGitBagFreeTimesFieldNumber = 5;
  private static readonly pbc::MapField<int, int>.Codec _map_xyGitBagFreeTimes_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 42);
  private readonly pbc::MapField<int, int> xyGitBagFreeTimes_ = new pbc::MapField<int, int>();
  /// <summary>
  ///免费领取次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> XyGitBagFreeTimes {
    get { return xyGitBagFreeTimes_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as XyGiftBagBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(XyGiftBagBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!AddItem.Equals(other.AddItem)) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    if (XyCd != other.XyCd) return false;
    if (!XyGitBagFreeTimes.Equals(other.XyGitBagFreeTimes)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    hash ^= AddItem.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    if (XyCd != 0) hash ^= XyCd.GetHashCode();
    hash ^= XyGitBagFreeTimes.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    addItem_.WriteTo(output, _map_addItem_codec);
    changeItem_.WriteTo(output, _map_changeItem_codec);
    if (XyCd != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(XyCd);
    }
    xyGitBagFreeTimes_.WriteTo(output, _map_xyGitBagFreeTimes_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    size += addItem_.CalculateSize(_map_addItem_codec);
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    if (XyCd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(XyCd);
    }
    size += xyGitBagFreeTimes_.CalculateSize(_map_xyGitBagFreeTimes_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(XyGiftBagBuyResp other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    addItem_.Add(other.addItem_);
    changeItem_.Add(other.changeItem_);
    if (other.XyCd != 0) {
      XyCd = other.XyCd;
    }
    xyGitBagFreeTimes_.Add(other.xyGitBagFreeTimes_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          addItem_.AddEntriesFrom(input, _map_addItem_codec);
          break;
        }
        case 26: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
        case 32: {
          XyCd = input.ReadInt32();
          break;
        }
        case 42: {
          xyGitBagFreeTimes_.AddEntriesFrom(input, _map_xyGitBagFreeTimes_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 每日礼包购买 --s3的方式传输
/// </summary>
public sealed partial class EveryDayGiftBuyReq : pb::IMessage<EveryDayGiftBuyReq> {
  private static readonly pb::MessageParser<EveryDayGiftBuyReq> _parser = new pb::MessageParser<EveryDayGiftBuyReq>(() => new EveryDayGiftBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EveryDayGiftBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EveryDayGiftBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EveryDayGiftBuyReq(EveryDayGiftBuyReq other) : this() {
    id_ = other.id_;
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EveryDayGiftBuyReq Clone() {
    return new EveryDayGiftBuyReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// id=1的商品 第一次免费 第二次看广告  特殊处理
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EveryDayGiftBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EveryDayGiftBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EveryDayGiftBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class EveryDayGiftBuyResp : pb::IMessage<EveryDayGiftBuyResp> {
  private static readonly pb::MessageParser<EveryDayGiftBuyResp> _parser = new pb::MessageParser<EveryDayGiftBuyResp>(() => new EveryDayGiftBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EveryDayGiftBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EveryDayGiftBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EveryDayGiftBuyResp(EveryDayGiftBuyResp other) : this() {
    id_ = other.id_;
    times_ = other.times_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EveryDayGiftBuyResp Clone() {
    return new EveryDayGiftBuyResp(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int TimesFieldNumber = 2;
  private int times_;
  /// <summary>
  ///当日购买次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Times {
    get { return times_; }
    set {
      times_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EveryDayGiftBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EveryDayGiftBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Times != other.Times) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Times != 0) hash ^= Times.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Times != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Times);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EveryDayGiftBuyResp other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Times != 0) {
      Times = other.Times;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Times = input.ReadInt32();
          break;
        }
        case 26: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 每日累充领奖
/// </summary>
public sealed partial class DayRechargeRewardReq : pb::IMessage<DayRechargeRewardReq> {
  private static readonly pb::MessageParser<DayRechargeRewardReq> _parser = new pb::MessageParser<DayRechargeRewardReq>(() => new DayRechargeRewardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DayRechargeRewardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DayRechargeRewardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DayRechargeRewardReq(DayRechargeRewardReq other) : this() {
    id_ = other.id_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DayRechargeRewardReq Clone() {
    return new DayRechargeRewardReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// EverydayRecharge id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DayRechargeRewardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DayRechargeRewardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DayRechargeRewardReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class DayRechargeRewardResp : pb::IMessage<DayRechargeRewardResp> {
  private static readonly pb::MessageParser<DayRechargeRewardResp> _parser = new pb::MessageParser<DayRechargeRewardResp>(() => new DayRechargeRewardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DayRechargeRewardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DayRechargeRewardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DayRechargeRewardResp(DayRechargeRewardResp other) : this() {
    id_ = other.id_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DayRechargeRewardResp Clone() {
    return new DayRechargeRewardResp(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DayRechargeRewardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DayRechargeRewardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DayRechargeRewardResp other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 基金解锁 --s3方式传输
/// </summary>
public sealed partial class FundUnlockReq : pb::IMessage<FundUnlockReq> {
  private static readonly pb::MessageParser<FundUnlockReq> _parser = new pb::MessageParser<FundUnlockReq>(() => new FundUnlockReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FundUnlockReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundUnlockReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundUnlockReq(FundUnlockReq other) : this() {
    fundUnlockId_ = other.fundUnlockId_;
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundUnlockReq Clone() {
    return new FundUnlockReq(this);
  }

  /// <summary>Field number for the "fundUnlockId" field.</summary>
  public const int FundUnlockIdFieldNumber = 1;
  private int fundUnlockId_;
  /// <summary>
  ///基金解锁id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FundUnlockId {
    get { return fundUnlockId_; }
    set {
      fundUnlockId_ = value;
    }
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FundUnlockReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FundUnlockReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FundUnlockId != other.FundUnlockId) return false;
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FundUnlockId != 0) hash ^= FundUnlockId.GetHashCode();
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FundUnlockId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FundUnlockId);
    }
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FundUnlockId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FundUnlockId);
    }
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FundUnlockReq other) {
    if (other == null) {
      return;
    }
    if (other.FundUnlockId != 0) {
      FundUnlockId = other.FundUnlockId;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          FundUnlockId = input.ReadInt32();
          break;
        }
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FundUnlockResp : pb::IMessage<FundUnlockResp> {
  private static readonly pb::MessageParser<FundUnlockResp> _parser = new pb::MessageParser<FundUnlockResp>(() => new FundUnlockResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FundUnlockResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundUnlockResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundUnlockResp(FundUnlockResp other) : this() {
    fundUnlockId_ = other.fundUnlockId_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundUnlockResp Clone() {
    return new FundUnlockResp(this);
  }

  /// <summary>Field number for the "fundUnlockId" field.</summary>
  public const int FundUnlockIdFieldNumber = 1;
  private int fundUnlockId_;
  /// <summary>
  ///基金解锁id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FundUnlockId {
    get { return fundUnlockId_; }
    set {
      fundUnlockId_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具 {2001:100}
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FundUnlockResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FundUnlockResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FundUnlockId != other.FundUnlockId) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FundUnlockId != 0) hash ^= FundUnlockId.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FundUnlockId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FundUnlockId);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FundUnlockId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FundUnlockId);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FundUnlockResp other) {
    if (other == null) {
      return;
    }
    if (other.FundUnlockId != 0) {
      FundUnlockId = other.FundUnlockId;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          FundUnlockId = input.ReadInt32();
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 基金列表 --req nil
/// </summary>
public sealed partial class FundListResp : pb::IMessage<FundListResp> {
  private static readonly pb::MessageParser<FundListResp> _parser = new pb::MessageParser<FundListResp>(() => new FundListResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FundListResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundListResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundListResp(FundListResp other) : this() {
    fundUnlockId_ = other.fundUnlockId_.Clone();
    fund_ = other.fund_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundListResp Clone() {
    return new FundListResp(this);
  }

  /// <summary>Field number for the "fundUnlockId" field.</summary>
  public const int FundUnlockIdFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_fundUnlockId_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> fundUnlockId_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///基金解锁id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> FundUnlockId {
    get { return fundUnlockId_; }
  }

  /// <summary>Field number for the "fund" field.</summary>
  public const int FundFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_fund_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> fund_ = new pbc::MapField<int, int>();
  /// <summary>
  ///只有已领取过的数据  key: id value: 1/2  --1代表领取了免费 2代表免费跟解锁都领取 ，这里是所有已经领取过的基金id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> Fund {
    get { return fund_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FundListResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FundListResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!fundUnlockId_.Equals(other.fundUnlockId_)) return false;
    if (!Fund.Equals(other.Fund)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= fundUnlockId_.GetHashCode();
    hash ^= Fund.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    fundUnlockId_.WriteTo(output, _repeated_fundUnlockId_codec);
    fund_.WriteTo(output, _map_fund_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += fundUnlockId_.CalculateSize(_repeated_fundUnlockId_codec);
    size += fund_.CalculateSize(_map_fund_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FundListResp other) {
    if (other == null) {
      return;
    }
    fundUnlockId_.Add(other.fundUnlockId_);
    fund_.Add(other.fund_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10:
        case 8: {
          fundUnlockId_.AddEntriesFrom(input, _repeated_fundUnlockId_codec);
          break;
        }
        case 18: {
          fund_.AddEntriesFrom(input, _map_fund_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 基金奖励领取
/// </summary>
public sealed partial class FundRewardReq : pb::IMessage<FundRewardReq> {
  private static readonly pb::MessageParser<FundRewardReq> _parser = new pb::MessageParser<FundRewardReq>(() => new FundRewardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FundRewardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundRewardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundRewardReq(FundRewardReq other) : this() {
    id_ = other.id_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundRewardReq Clone() {
    return new FundRewardReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  ///基金id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FundRewardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FundRewardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FundRewardReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class FundRewardResp : pb::IMessage<FundRewardResp> {
  private static readonly pb::MessageParser<FundRewardResp> _parser = new pb::MessageParser<FundRewardResp>(() => new FundRewardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FundRewardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundRewardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundRewardResp(FundRewardResp other) : this() {
    fund_ = other.fund_.Clone();
    addItem_ = other.addItem_.Clone();
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FundRewardResp Clone() {
    return new FundRewardResp(this);
  }

  /// <summary>Field number for the "fund" field.</summary>
  public const int FundFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_fund_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> fund_ = new pbc::MapField<int, int>();
  /// <summary>
  ///返回示例{1,1} 只有当前奖励的id 跟 对应value ，不是所有数据，客户端需要自己put 到 列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> Fund {
    get { return fund_; }
  }

  /// <summary>Field number for the "addItem" field.</summary>
  public const int AddItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_addItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> addItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///获得的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> AddItem {
    get { return addItem_; }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FundRewardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FundRewardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Fund.Equals(other.Fund)) return false;
    if (!AddItem.Equals(other.AddItem)) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Fund.GetHashCode();
    hash ^= AddItem.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    fund_.WriteTo(output, _map_fund_codec);
    addItem_.WriteTo(output, _map_addItem_codec);
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += fund_.CalculateSize(_map_fund_codec);
    size += addItem_.CalculateSize(_map_addItem_codec);
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FundRewardResp other) {
    if (other == null) {
      return;
    }
    fund_.Add(other.fund_);
    addItem_.Add(other.addItem_);
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          fund_.AddEntriesFrom(input, _map_fund_codec);
          break;
        }
        case 18: {
          addItem_.AddEntriesFrom(input, _map_addItem_codec);
          break;
        }
        case 26: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 月卡列表 --req nil
/// </summary>
public sealed partial class MonthCardListResp : pb::IMessage<MonthCardListResp> {
  private static readonly pb::MessageParser<MonthCardListResp> _parser = new pb::MessageParser<MonthCardListResp>(() => new MonthCardListResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MonthCardListResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardListResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardListResp(MonthCardListResp other) : this() {
    getIds_ = other.getIds_.Clone();
    rewardDay_ = other.rewardDay_.Clone();
    serverDay_ = other.serverDay_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardListResp Clone() {
    return new MonthCardListResp(this);
  }

  /// <summary>Field number for the "getIds" field.</summary>
  public const int GetIdsFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_getIds_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> getIds_ = new pbc::MapField<int, int>();
  /// <summary>
  ///已购买的月卡ids key: 月卡id value:购买的时间,单位s
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> GetIds {
    get { return getIds_; }
  }

  /// <summary>Field number for the "rewardDay" field.</summary>
  public const int RewardDayFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_rewardDay_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> rewardDay_ = new pbc::MapField<int, int>();
  /// <summary>
  ///月卡领奖天 key: 月卡id value:20230722 （年月日格式的天数）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> RewardDay {
    get { return rewardDay_; }
  }

  /// <summary>Field number for the "serverDay" field.</summary>
  public const int ServerDayFieldNumber = 3;
  private int serverDay_;
  /// <summary>
  ///服务器下发的天数 20230722 （年月日格式的天数）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerDay {
    get { return serverDay_; }
    set {
      serverDay_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MonthCardListResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MonthCardListResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!GetIds.Equals(other.GetIds)) return false;
    if (!RewardDay.Equals(other.RewardDay)) return false;
    if (ServerDay != other.ServerDay) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= GetIds.GetHashCode();
    hash ^= RewardDay.GetHashCode();
    if (ServerDay != 0) hash ^= ServerDay.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    getIds_.WriteTo(output, _map_getIds_codec);
    rewardDay_.WriteTo(output, _map_rewardDay_codec);
    if (ServerDay != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ServerDay);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += getIds_.CalculateSize(_map_getIds_codec);
    size += rewardDay_.CalculateSize(_map_rewardDay_codec);
    if (ServerDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerDay);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MonthCardListResp other) {
    if (other == null) {
      return;
    }
    getIds_.Add(other.getIds_);
    rewardDay_.Add(other.rewardDay_);
    if (other.ServerDay != 0) {
      ServerDay = other.ServerDay;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          getIds_.AddEntriesFrom(input, _map_getIds_codec);
          break;
        }
        case 18: {
          rewardDay_.AddEntriesFrom(input, _map_rewardDay_codec);
          break;
        }
        case 24: {
          ServerDay = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 月卡领奖
/// </summary>
public sealed partial class MonthCardRewardReq : pb::IMessage<MonthCardRewardReq> {
  private static readonly pb::MessageParser<MonthCardRewardReq> _parser = new pb::MessageParser<MonthCardRewardReq>(() => new MonthCardRewardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MonthCardRewardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardRewardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardRewardReq(MonthCardRewardReq other) : this() {
    cardid_ = other.cardid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardRewardReq Clone() {
    return new MonthCardRewardReq(this);
  }

  /// <summary>Field number for the "cardid" field.</summary>
  public const int CardidFieldNumber = 1;
  private int cardid_;
  /// <summary>
  ///月卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cardid {
    get { return cardid_; }
    set {
      cardid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MonthCardRewardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MonthCardRewardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cardid != other.Cardid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cardid != 0) hash ^= Cardid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cardid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cardid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cardid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cardid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MonthCardRewardReq other) {
    if (other == null) {
      return;
    }
    if (other.Cardid != 0) {
      Cardid = other.Cardid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Cardid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class MonthCardRewardResp : pb::IMessage<MonthCardRewardResp> {
  private static readonly pb::MessageParser<MonthCardRewardResp> _parser = new pb::MessageParser<MonthCardRewardResp>(() => new MonthCardRewardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MonthCardRewardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardRewardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardRewardResp(MonthCardRewardResp other) : this() {
    cardid_ = other.cardid_;
    rewardDay_ = other.rewardDay_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardRewardResp Clone() {
    return new MonthCardRewardResp(this);
  }

  /// <summary>Field number for the "cardid" field.</summary>
  public const int CardidFieldNumber = 1;
  private int cardid_;
  /// <summary>
  ///月卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cardid {
    get { return cardid_; }
    set {
      cardid_ = value;
    }
  }

  /// <summary>Field number for the "rewardDay" field.</summary>
  public const int RewardDayFieldNumber = 2;
  private int rewardDay_;
  /// <summary>
  ///领奖天
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RewardDay {
    get { return rewardDay_; }
    set {
      rewardDay_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MonthCardRewardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MonthCardRewardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cardid != other.Cardid) return false;
    if (RewardDay != other.RewardDay) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cardid != 0) hash ^= Cardid.GetHashCode();
    if (RewardDay != 0) hash ^= RewardDay.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cardid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cardid);
    }
    if (RewardDay != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RewardDay);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cardid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cardid);
    }
    if (RewardDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardDay);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MonthCardRewardResp other) {
    if (other == null) {
      return;
    }
    if (other.Cardid != 0) {
      Cardid = other.Cardid;
    }
    if (other.RewardDay != 0) {
      RewardDay = other.RewardDay;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Cardid = input.ReadInt32();
          break;
        }
        case 16: {
          RewardDay = input.ReadInt32();
          break;
        }
        case 26: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 月卡充值 --s3方式传输
/// </summary>
public sealed partial class MonthCardChargeReq : pb::IMessage<MonthCardChargeReq> {
  private static readonly pb::MessageParser<MonthCardChargeReq> _parser = new pb::MessageParser<MonthCardChargeReq>(() => new MonthCardChargeReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MonthCardChargeReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardChargeReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardChargeReq(MonthCardChargeReq other) : this() {
    cardid_ = other.cardid_;
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardChargeReq Clone() {
    return new MonthCardChargeReq(this);
  }

  /// <summary>Field number for the "cardid" field.</summary>
  public const int CardidFieldNumber = 1;
  private int cardid_;
  /// <summary>
  ///月卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cardid {
    get { return cardid_; }
    set {
      cardid_ = value;
    }
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MonthCardChargeReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MonthCardChargeReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cardid != other.Cardid) return false;
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cardid != 0) hash ^= Cardid.GetHashCode();
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cardid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cardid);
    }
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cardid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cardid);
    }
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MonthCardChargeReq other) {
    if (other == null) {
      return;
    }
    if (other.Cardid != 0) {
      Cardid = other.Cardid;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Cardid = input.ReadInt32();
          break;
        }
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class MonthCardChargeResp : pb::IMessage<MonthCardChargeResp> {
  private static readonly pb::MessageParser<MonthCardChargeResp> _parser = new pb::MessageParser<MonthCardChargeResp>(() => new MonthCardChargeResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MonthCardChargeResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardChargeResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardChargeResp(MonthCardChargeResp other) : this() {
    cardid_ = other.cardid_;
    addItem_ = other.addItem_.Clone();
    changeItem_ = other.changeItem_.Clone();
    rewardDay_ = other.rewardDay_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MonthCardChargeResp Clone() {
    return new MonthCardChargeResp(this);
  }

  /// <summary>Field number for the "cardid" field.</summary>
  public const int CardidFieldNumber = 1;
  private int cardid_;
  /// <summary>
  ///月卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cardid {
    get { return cardid_; }
    set {
      cardid_ = value;
    }
  }

  /// <summary>Field number for the "addItem" field.</summary>
  public const int AddItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_addItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> addItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///获得的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> AddItem {
    get { return addItem_; }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  /// <summary>Field number for the "rewardDay" field.</summary>
  public const int RewardDayFieldNumber = 4;
  private int rewardDay_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RewardDay {
    get { return rewardDay_; }
    set {
      rewardDay_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MonthCardChargeResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MonthCardChargeResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cardid != other.Cardid) return false;
    if (!AddItem.Equals(other.AddItem)) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    if (RewardDay != other.RewardDay) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cardid != 0) hash ^= Cardid.GetHashCode();
    hash ^= AddItem.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    if (RewardDay != 0) hash ^= RewardDay.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cardid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cardid);
    }
    addItem_.WriteTo(output, _map_addItem_codec);
    changeItem_.WriteTo(output, _map_changeItem_codec);
    if (RewardDay != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(RewardDay);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cardid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cardid);
    }
    size += addItem_.CalculateSize(_map_addItem_codec);
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    if (RewardDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardDay);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MonthCardChargeResp other) {
    if (other == null) {
      return;
    }
    if (other.Cardid != 0) {
      Cardid = other.Cardid;
    }
    addItem_.Add(other.addItem_);
    changeItem_.Add(other.changeItem_);
    if (other.RewardDay != 0) {
      RewardDay = other.RewardDay;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Cardid = input.ReadInt32();
          break;
        }
        case 18: {
          addItem_.AddEntriesFrom(input, _map_addItem_codec);
          break;
        }
        case 26: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
        case 32: {
          RewardDay = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 每周礼包数据 --req nil
/// </summary>
public sealed partial class WeekGiftDataResp : pb::IMessage<WeekGiftDataResp> {
  private static readonly pb::MessageParser<WeekGiftDataResp> _parser = new pb::MessageParser<WeekGiftDataResp>(() => new WeekGiftDataResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WeekGiftDataResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftDataResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftDataResp(WeekGiftDataResp other) : this() {
    weekGiftBuy_ = other.weekGiftBuy_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftDataResp Clone() {
    return new WeekGiftDataResp(this);
  }

  /// <summary>Field number for the "weekGiftBuy" field.</summary>
  public const int WeekGiftBuyFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_weekGiftBuy_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> weekGiftBuy_ = new pbc::MapField<int, int>();
  /// <summary>
  ///周礼包购买次数 key: id,value:次数(每周清空)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> WeekGiftBuy {
    get { return weekGiftBuy_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WeekGiftDataResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WeekGiftDataResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!WeekGiftBuy.Equals(other.WeekGiftBuy)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= WeekGiftBuy.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    weekGiftBuy_.WriteTo(output, _map_weekGiftBuy_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += weekGiftBuy_.CalculateSize(_map_weekGiftBuy_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WeekGiftDataResp other) {
    if (other == null) {
      return;
    }
    weekGiftBuy_.Add(other.weekGiftBuy_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          weekGiftBuy_.AddEntriesFrom(input, _map_weekGiftBuy_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 每周礼包购买 --s3方式传输
/// </summary>
public sealed partial class WeekGiftBuyReq : pb::IMessage<WeekGiftBuyReq> {
  private static readonly pb::MessageParser<WeekGiftBuyReq> _parser = new pb::MessageParser<WeekGiftBuyReq>(() => new WeekGiftBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WeekGiftBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftBuyReq(WeekGiftBuyReq other) : this() {
    id_ = other.id_;
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftBuyReq Clone() {
    return new WeekGiftBuyReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WeekGiftBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WeekGiftBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WeekGiftBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class WeekGiftBuyResp : pb::IMessage<WeekGiftBuyResp> {
  private static readonly pb::MessageParser<WeekGiftBuyResp> _parser = new pb::MessageParser<WeekGiftBuyResp>(() => new WeekGiftBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WeekGiftBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftBuyResp(WeekGiftBuyResp other) : this() {
    id_ = other.id_;
    buyTimes_ = other.buyTimes_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WeekGiftBuyResp Clone() {
    return new WeekGiftBuyResp(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "buyTimes" field.</summary>
  public const int BuyTimesFieldNumber = 2;
  private int buyTimes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BuyTimes {
    get { return buyTimes_; }
    set {
      buyTimes_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WeekGiftBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WeekGiftBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (BuyTimes != other.BuyTimes) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (BuyTimes != 0) hash ^= BuyTimes.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (BuyTimes != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BuyTimes);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (BuyTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyTimes);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WeekGiftBuyResp other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.BuyTimes != 0) {
      BuyTimes = other.BuyTimes;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          BuyTimes = input.ReadInt32();
          break;
        }
        case 26: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 限时礼包购买
/// </summary>
public sealed partial class LimitTimeGiftBuyReq : pb::IMessage<LimitTimeGiftBuyReq> {
  private static readonly pb::MessageParser<LimitTimeGiftBuyReq> _parser = new pb::MessageParser<LimitTimeGiftBuyReq>(() => new LimitTimeGiftBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LimitTimeGiftBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LimitTimeGiftBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LimitTimeGiftBuyReq(LimitTimeGiftBuyReq other) : this() {
    id_ = other.id_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LimitTimeGiftBuyReq Clone() {
    return new LimitTimeGiftBuyReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LimitTimeGiftBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LimitTimeGiftBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LimitTimeGiftBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class LimitTimeGiftBuyResp : pb::IMessage<LimitTimeGiftBuyResp> {
  private static readonly pb::MessageParser<LimitTimeGiftBuyResp> _parser = new pb::MessageParser<LimitTimeGiftBuyResp>(() => new LimitTimeGiftBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LimitTimeGiftBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LimitTimeGiftBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LimitTimeGiftBuyResp(LimitTimeGiftBuyResp other) : this() {
    id_ = other.id_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LimitTimeGiftBuyResp Clone() {
    return new LimitTimeGiftBuyResp(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  ///对应cd重置为-1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LimitTimeGiftBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LimitTimeGiftBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LimitTimeGiftBuyResp other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 云游礼包购买
/// </summary>
public sealed partial class CloudGiftBuyReq : pb::IMessage<CloudGiftBuyReq> {
  private static readonly pb::MessageParser<CloudGiftBuyReq> _parser = new pb::MessageParser<CloudGiftBuyReq>(() => new CloudGiftBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CloudGiftBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudGiftBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudGiftBuyReq(CloudGiftBuyReq other) : this() {
    id_ = other.id_;
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudGiftBuyReq Clone() {
    return new CloudGiftBuyReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CloudGiftBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CloudGiftBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CloudGiftBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CloudGiftBuyResp : pb::IMessage<CloudGiftBuyResp> {
  private static readonly pb::MessageParser<CloudGiftBuyResp> _parser = new pb::MessageParser<CloudGiftBuyResp>(() => new CloudGiftBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CloudGiftBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudGiftBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudGiftBuyResp(CloudGiftBuyResp other) : this() {
    id_ = other.id_;
    changeItem_ = other.changeItem_.Clone();
    funeNum_ = other.funeNum_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudGiftBuyResp Clone() {
    return new CloudGiftBuyResp(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  /// <summary>Field number for the "funeNum" field.</summary>
  public const int FuneNumFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_funeNum_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> funeNum_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的云游符文 id->num
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> FuneNum {
    get { return funeNum_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CloudGiftBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CloudGiftBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    if (!FuneNum.Equals(other.FuneNum)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    hash ^= FuneNum.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
    funeNum_.WriteTo(output, _map_funeNum_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    size += funeNum_.CalculateSize(_map_funeNum_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CloudGiftBuyResp other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    changeItem_.Add(other.changeItem_);
    funeNum_.Add(other.funeNum_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
        case 26: {
          funeNum_.AddEntriesFrom(input, _map_funeNum_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 云游特权礼包购买 
/// </summary>
public sealed partial class CloudPrivilegeGiftBuyReq : pb::IMessage<CloudPrivilegeGiftBuyReq> {
  private static readonly pb::MessageParser<CloudPrivilegeGiftBuyReq> _parser = new pb::MessageParser<CloudPrivilegeGiftBuyReq>(() => new CloudPrivilegeGiftBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CloudPrivilegeGiftBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftBuyReq(CloudPrivilegeGiftBuyReq other) : this() {
    orderid_ = other.orderid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftBuyReq Clone() {
    return new CloudPrivilegeGiftBuyReq(this);
  }

  /// <summary>Field number for the "orderid" field.</summary>
  public const int OrderidFieldNumber = 2;
  private string orderid_ = "";
  /// <summary>
  ///sdk服务器充值成功后 返回 的唯一订单id，开发测试阶段取值"test"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Orderid {
    get { return orderid_; }
    set {
      orderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CloudPrivilegeGiftBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CloudPrivilegeGiftBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Orderid != other.Orderid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Orderid.Length != 0) hash ^= Orderid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Orderid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Orderid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Orderid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CloudPrivilegeGiftBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.Orderid.Length != 0) {
      Orderid = other.Orderid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 18: {
          Orderid = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CloudPrivilegeGiftBuyResp : pb::IMessage<CloudPrivilegeGiftBuyResp> {
  private static readonly pb::MessageParser<CloudPrivilegeGiftBuyResp> _parser = new pb::MessageParser<CloudPrivilegeGiftBuyResp>(() => new CloudPrivilegeGiftBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CloudPrivilegeGiftBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftBuyResp(CloudPrivilegeGiftBuyResp other) : this() {
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftBuyResp Clone() {
    return new CloudPrivilegeGiftBuyResp(this);
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CloudPrivilegeGiftBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CloudPrivilegeGiftBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CloudPrivilegeGiftBuyResp other) {
    if (other == null) {
      return;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 云游特权礼包体验 --req nil
/// </summary>
public sealed partial class CloudPrivilegeGiftTestResp : pb::IMessage<CloudPrivilegeGiftTestResp> {
  private static readonly pb::MessageParser<CloudPrivilegeGiftTestResp> _parser = new pb::MessageParser<CloudPrivilegeGiftTestResp>(() => new CloudPrivilegeGiftTestResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CloudPrivilegeGiftTestResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ActivityReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftTestResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftTestResp(CloudPrivilegeGiftTestResp other) : this() {
    testEndTime_ = other.testEndTime_;
    testNum_ = other.testNum_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloudPrivilegeGiftTestResp Clone() {
    return new CloudPrivilegeGiftTestResp(this);
  }

  /// <summary>Field number for the "testEndTime" field.</summary>
  public const int TestEndTimeFieldNumber = 1;
  private int testEndTime_;
  /// <summary>
  ///体验结束时间,单位秒
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TestEndTime {
    get { return testEndTime_; }
    set {
      testEndTime_ = value;
    }
  }

  /// <summary>Field number for the "testNum" field.</summary>
  public const int TestNumFieldNumber = 2;
  private int testNum_;
  /// <summary>
  ///体验次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TestNum {
    get { return testNum_; }
    set {
      testNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CloudPrivilegeGiftTestResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CloudPrivilegeGiftTestResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TestEndTime != other.TestEndTime) return false;
    if (TestNum != other.TestNum) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TestEndTime != 0) hash ^= TestEndTime.GetHashCode();
    if (TestNum != 0) hash ^= TestNum.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TestEndTime != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TestEndTime);
    }
    if (TestNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TestNum);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TestEndTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestEndTime);
    }
    if (TestNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestNum);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CloudPrivilegeGiftTestResp other) {
    if (other == null) {
      return;
    }
    if (other.TestEndTime != 0) {
      TestEndTime = other.TestEndTime;
    }
    if (other.TestNum != 0) {
      TestNum = other.TestNum;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TestEndTime = input.ReadInt32();
          break;
        }
        case 16: {
          TestNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
