// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recharge.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from recharge.proto</summary>
public static partial class RechargeReflection {

  #region Descriptor
  /// <summary>File descriptor for recharge.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RechargeReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5yZWNoYXJnZS5wcm90bxoMc2RrYXBpLnByb3RvGgpiZWFuLnByb3RvIiQK",
          "DlJlY2hhcmdlQnV5UmVxEhIKCnJlY2hhcmdlSWQYASABKAUiUQoPUmVjaGFy",
          "Z2VCdXlSZXNwEhIKCnJlY2hhcmdlSWQYASABKAUSKgoJb3JkZXJJbmZvGAIg",
          "ASgLMhcuUGF5bWVudENyZWF0ZU9yZGVyUmVzcCIWChRGaXJzdFJlY2hhcmdl",
          "SW5mb1JlcSI4ChVGaXJzdFJlY2hhcmdlSW5mb1Jlc3ASHwoFaW5mb3MYASAD",
          "KAsyEC5GaXJzdFJlY2hhcmdlUGIiOwoWRmlyc3RSZWNoYXJnZVJld2FyZFJl",
          "cRISCgpyZWNoYXJnZUlkGAEgASgFEg0KBWRheUlkGAIgASgFIqsBChdGaXJz",
          "dFJlY2hhcmdlUmV3YXJkUmVzcBIfCgVpbmZvcxgBIAMoCzIQLkZpcnN0UmVj",
          "aGFyZ2VQYhI8CgpjaGFuZ2VJdGVtGAIgAygLMiguRmlyc3RSZWNoYXJnZVJl",
          "d2FyZFJlc3AuQ2hhbmdlSXRlbUVudHJ5GjEKD0NoYW5nZUl0ZW1FbnRyeRIL",
          "CgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIhUKE0dvbGRSZWNoYXJn",
          "ZUluZm9SZXEieAoUR29sZFJlY2hhcmdlSW5mb1Jlc3ASMQoGYnV5TnVtGAEg",
          "AygLMiEuR29sZFJlY2hhcmdlSW5mb1Jlc3AuQnV5TnVtRW50cnkaLQoLQnV5",
          "TnVtRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASISChBQ",
          "cml2aWxlZ2VJbmZvUmVxIo8BChFQcml2aWxlZ2VJbmZvUmVzcBI0CgljYXJk",
          "SW5mb3MYASADKAsyIS5Qcml2aWxlZ2VJbmZvUmVzcC5DYXJkSW5mb3NFbnRy",
          "eRpECg5DYXJkSW5mb3NFbnRyeRILCgNrZXkYASABKAUSIQoFdmFsdWUYAiAB",
          "KAsyEi5Qcml2aWxlZ2VDYXJkSW5mbzoCOAFCGAoKY29tLmNiLm1zZ0IKUEJS",
          "ZWNoYXJnZWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SdkapiReflection.Descriptor, global::BeanReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RechargeBuyReq), global::RechargeBuyReq.Parser, new[]{ "RechargeId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RechargeBuyResp), global::RechargeBuyResp.Parser, new[]{ "RechargeId", "OrderInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FirstRechargeInfoReq), global::FirstRechargeInfoReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FirstRechargeInfoResp), global::FirstRechargeInfoResp.Parser, new[]{ "Infos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FirstRechargeRewardReq), global::FirstRechargeRewardReq.Parser, new[]{ "RechargeId", "DayId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FirstRechargeRewardResp), global::FirstRechargeRewardResp.Parser, new[]{ "Infos", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::GoldRechargeInfoReq), global::GoldRechargeInfoReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GoldRechargeInfoResp), global::GoldRechargeInfoResp.Parser, new[]{ "BuyNum" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::PrivilegeInfoReq), global::PrivilegeInfoReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PrivilegeInfoResp), global::PrivilegeInfoResp.Parser, new[]{ "CardInfos" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///*
///统一购买入口
/// </summary>
public sealed partial class RechargeBuyReq : pb::IMessage<RechargeBuyReq> {
  private static readonly pb::MessageParser<RechargeBuyReq> _parser = new pb::MessageParser<RechargeBuyReq>(() => new RechargeBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RechargeBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RechargeBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RechargeBuyReq(RechargeBuyReq other) : this() {
    rechargeId_ = other.rechargeId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RechargeBuyReq Clone() {
    return new RechargeBuyReq(this);
  }

  /// <summary>Field number for the "rechargeId" field.</summary>
  public const int RechargeIdFieldNumber = 1;
  private int rechargeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RechargeId {
    get { return rechargeId_; }
    set {
      rechargeId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RechargeBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RechargeBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RechargeId != other.RechargeId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RechargeId != 0) hash ^= RechargeId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RechargeId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RechargeId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RechargeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RechargeId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RechargeBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.RechargeId != 0) {
      RechargeId = other.RechargeId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RechargeId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class RechargeBuyResp : pb::IMessage<RechargeBuyResp> {
  private static readonly pb::MessageParser<RechargeBuyResp> _parser = new pb::MessageParser<RechargeBuyResp>(() => new RechargeBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RechargeBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RechargeBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RechargeBuyResp(RechargeBuyResp other) : this() {
    rechargeId_ = other.rechargeId_;
    OrderInfo = other.orderInfo_ != null ? other.OrderInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RechargeBuyResp Clone() {
    return new RechargeBuyResp(this);
  }

  /// <summary>Field number for the "rechargeId" field.</summary>
  public const int RechargeIdFieldNumber = 1;
  private int rechargeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RechargeId {
    get { return rechargeId_; }
    set {
      rechargeId_ = value;
    }
  }

  /// <summary>Field number for the "orderInfo" field.</summary>
  public const int OrderInfoFieldNumber = 2;
  private global::PaymentCreateOrderResp orderInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PaymentCreateOrderResp OrderInfo {
    get { return orderInfo_; }
    set {
      orderInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RechargeBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RechargeBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RechargeId != other.RechargeId) return false;
    if (!object.Equals(OrderInfo, other.OrderInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RechargeId != 0) hash ^= RechargeId.GetHashCode();
    if (orderInfo_ != null) hash ^= OrderInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RechargeId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RechargeId);
    }
    if (orderInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(OrderInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RechargeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RechargeId);
    }
    if (orderInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RechargeBuyResp other) {
    if (other == null) {
      return;
    }
    if (other.RechargeId != 0) {
      RechargeId = other.RechargeId;
    }
    if (other.orderInfo_ != null) {
      if (orderInfo_ == null) {
        orderInfo_ = new global::PaymentCreateOrderResp();
      }
      OrderInfo.MergeFrom(other.OrderInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RechargeId = input.ReadInt32();
          break;
        }
        case 18: {
          if (orderInfo_ == null) {
            orderInfo_ = new global::PaymentCreateOrderResp();
          }
          input.ReadMessage(orderInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
///*
///首充
/// </summary>
public sealed partial class FirstRechargeInfoReq : pb::IMessage<FirstRechargeInfoReq> {
  private static readonly pb::MessageParser<FirstRechargeInfoReq> _parser = new pb::MessageParser<FirstRechargeInfoReq>(() => new FirstRechargeInfoReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FirstRechargeInfoReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeInfoReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeInfoReq(FirstRechargeInfoReq other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeInfoReq Clone() {
    return new FirstRechargeInfoReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FirstRechargeInfoReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FirstRechargeInfoReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FirstRechargeInfoReq other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class FirstRechargeInfoResp : pb::IMessage<FirstRechargeInfoResp> {
  private static readonly pb::MessageParser<FirstRechargeInfoResp> _parser = new pb::MessageParser<FirstRechargeInfoResp>(() => new FirstRechargeInfoResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FirstRechargeInfoResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeInfoResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeInfoResp(FirstRechargeInfoResp other) : this() {
    infos_ = other.infos_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeInfoResp Clone() {
    return new FirstRechargeInfoResp(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::FirstRechargePb> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::FirstRechargePb.Parser);
  private readonly pbc::RepeatedField<global::FirstRechargePb> infos_ = new pbc::RepeatedField<global::FirstRechargePb>();
  /// <summary>
  ///首充信息   k：rechargeId  v：该档首充的其他信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FirstRechargePb> Infos {
    get { return infos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FirstRechargeInfoResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FirstRechargeInfoResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    infos_.WriteTo(output, _repeated_infos_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FirstRechargeInfoResp other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class FirstRechargeRewardReq : pb::IMessage<FirstRechargeRewardReq> {
  private static readonly pb::MessageParser<FirstRechargeRewardReq> _parser = new pb::MessageParser<FirstRechargeRewardReq>(() => new FirstRechargeRewardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FirstRechargeRewardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeRewardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeRewardReq(FirstRechargeRewardReq other) : this() {
    rechargeId_ = other.rechargeId_;
    dayId_ = other.dayId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeRewardReq Clone() {
    return new FirstRechargeRewardReq(this);
  }

  /// <summary>Field number for the "rechargeId" field.</summary>
  public const int RechargeIdFieldNumber = 1;
  private int rechargeId_;
  /// <summary>
  ///首充档位rechargeId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RechargeId {
    get { return rechargeId_; }
    set {
      rechargeId_ = value;
    }
  }

  /// <summary>Field number for the "dayId" field.</summary>
  public const int DayIdFieldNumber = 2;
  private int dayId_;
  /// <summary>
  ///领取的天数  配置表ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DayId {
    get { return dayId_; }
    set {
      dayId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FirstRechargeRewardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FirstRechargeRewardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RechargeId != other.RechargeId) return false;
    if (DayId != other.DayId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RechargeId != 0) hash ^= RechargeId.GetHashCode();
    if (DayId != 0) hash ^= DayId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RechargeId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RechargeId);
    }
    if (DayId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(DayId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RechargeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RechargeId);
    }
    if (DayId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DayId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FirstRechargeRewardReq other) {
    if (other == null) {
      return;
    }
    if (other.RechargeId != 0) {
      RechargeId = other.RechargeId;
    }
    if (other.DayId != 0) {
      DayId = other.DayId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RechargeId = input.ReadInt32();
          break;
        }
        case 16: {
          DayId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class FirstRechargeRewardResp : pb::IMessage<FirstRechargeRewardResp> {
  private static readonly pb::MessageParser<FirstRechargeRewardResp> _parser = new pb::MessageParser<FirstRechargeRewardResp>(() => new FirstRechargeRewardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FirstRechargeRewardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeRewardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeRewardResp(FirstRechargeRewardResp other) : this() {
    infos_ = other.infos_.Clone();
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstRechargeRewardResp Clone() {
    return new FirstRechargeRewardResp(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::FirstRechargePb> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::FirstRechargePb.Parser);
  private readonly pbc::RepeatedField<global::FirstRechargePb> infos_ = new pbc::RepeatedField<global::FirstRechargePb>();
  /// <summary>
  ///首充信息   k：rechargeId  v：该档首充的其他信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FirstRechargePb> Infos {
    get { return infos_; }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///固定改变道具，客户端直接用k,v进行道具覆盖
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FirstRechargeRewardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FirstRechargeRewardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    infos_.WriteTo(output, _repeated_infos_codec);
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FirstRechargeRewardResp other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///*金币充值*
/// </summary>
public sealed partial class GoldRechargeInfoReq : pb::IMessage<GoldRechargeInfoReq> {
  private static readonly pb::MessageParser<GoldRechargeInfoReq> _parser = new pb::MessageParser<GoldRechargeInfoReq>(() => new GoldRechargeInfoReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GoldRechargeInfoReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldRechargeInfoReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldRechargeInfoReq(GoldRechargeInfoReq other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldRechargeInfoReq Clone() {
    return new GoldRechargeInfoReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GoldRechargeInfoReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GoldRechargeInfoReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GoldRechargeInfoReq other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class GoldRechargeInfoResp : pb::IMessage<GoldRechargeInfoResp> {
  private static readonly pb::MessageParser<GoldRechargeInfoResp> _parser = new pb::MessageParser<GoldRechargeInfoResp>(() => new GoldRechargeInfoResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GoldRechargeInfoResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldRechargeInfoResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldRechargeInfoResp(GoldRechargeInfoResp other) : this() {
    buyNum_ = other.buyNum_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldRechargeInfoResp Clone() {
    return new GoldRechargeInfoResp(this);
  }

  /// <summary>Field number for the "buyNum" field.</summary>
  public const int BuyNumFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_buyNum_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> buyNum_ = new pbc::MapField<int, int>();
  /// <summary>
  ///购买次数 k：rechargeId v:购买次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> BuyNum {
    get { return buyNum_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GoldRechargeInfoResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GoldRechargeInfoResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!BuyNum.Equals(other.BuyNum)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= BuyNum.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    buyNum_.WriteTo(output, _map_buyNum_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += buyNum_.CalculateSize(_map_buyNum_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GoldRechargeInfoResp other) {
    if (other == null) {
      return;
    }
    buyNum_.Add(other.buyNum_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          buyNum_.AddEntriesFrom(input, _map_buyNum_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///*特权卡*
/// </summary>
public sealed partial class PrivilegeInfoReq : pb::IMessage<PrivilegeInfoReq> {
  private static readonly pb::MessageParser<PrivilegeInfoReq> _parser = new pb::MessageParser<PrivilegeInfoReq>(() => new PrivilegeInfoReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PrivilegeInfoReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrivilegeInfoReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrivilegeInfoReq(PrivilegeInfoReq other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrivilegeInfoReq Clone() {
    return new PrivilegeInfoReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PrivilegeInfoReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PrivilegeInfoReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PrivilegeInfoReq other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PrivilegeInfoResp : pb::IMessage<PrivilegeInfoResp> {
  private static readonly pb::MessageParser<PrivilegeInfoResp> _parser = new pb::MessageParser<PrivilegeInfoResp>(() => new PrivilegeInfoResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PrivilegeInfoResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RechargeReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrivilegeInfoResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrivilegeInfoResp(PrivilegeInfoResp other) : this() {
    cardInfos_ = other.cardInfos_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrivilegeInfoResp Clone() {
    return new PrivilegeInfoResp(this);
  }

  /// <summary>Field number for the "cardInfos" field.</summary>
  public const int CardInfosFieldNumber = 1;
  private static readonly pbc::MapField<int, global::PrivilegeCardInfo>.Codec _map_cardInfos_codec
      = new pbc::MapField<int, global::PrivilegeCardInfo>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::PrivilegeCardInfo.Parser), 10);
  private readonly pbc::MapField<int, global::PrivilegeCardInfo> cardInfos_ = new pbc::MapField<int, global::PrivilegeCardInfo>();
  /// <summary>
  ///k 特权卡ID		v:特权卡信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::PrivilegeCardInfo> CardInfos {
    get { return cardInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PrivilegeInfoResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PrivilegeInfoResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!CardInfos.Equals(other.CardInfos)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= CardInfos.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    cardInfos_.WriteTo(output, _map_cardInfos_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += cardInfos_.CalculateSize(_map_cardInfos_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PrivilegeInfoResp other) {
    if (other == null) {
      return;
    }
    cardInfos_.Add(other.cardInfos_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          cardInfos_.AddEntriesFrom(input, _map_cardInfos_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
