// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from server.proto</summary>
public static partial class ServerReflection {

  #region Descriptor
  /// <summary>File descriptor for server.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxzZXJ2ZXIucHJvdG8aCmJlYW4ucHJvdG8iHAoMR2V0U2VydmVyUmVxEgwK",
          "BGNvZGUYASABKAkiTQoNR2V0U2VydmVyUmVzcBIZCgZzZXJ2ZXIYASABKAsy",
          "CS5TZXJ2ZXJQYhIhCghwbGF0VXNlchgCIAEoCzIPLlBsYXRmb3JtVXNlclBi",
          "Ig8KDVNlcnZlckxpc3RSZXEiSgoOU2VydmVyTGlzdFJlc3ASHQoKc2VydmVy",
          "TGlzdBgBIAMoCzIJLlNlcnZlclBiEhkKBm15TGlzdBgCIAMoCzIJLlNlcnZl",
          "clBiIhUKE1NlcnZlckNyZWF0ZVJvbGVSZXEiFgoUU2VydmVyQ3JlYXRlUm9s",
          "ZVJlc3AiHgoPQ2hhbmdlU2VydmVyUmVxEgsKA3NpZBgBIAEoBSIfChBDaGFu",
          "Z2VTZXJ2ZXJSZXNwEgsKA3JlcxgBIAEoCUIWCgpjb20uY2IubXNnQghQQlNl",
          "cnZlcmIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BeanReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GetServerReq), global::GetServerReq.Parser, new[]{ "Code" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetServerResp), global::GetServerResp.Parser, new[]{ "Server", "PlatUser" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerListReq), global::ServerListReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerListResp), global::ServerListResp.Parser, new[]{ "ServerList", "MyList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerCreateRoleReq), global::ServerCreateRoleReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerCreateRoleResp), global::ServerCreateRoleResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChangeServerReq), global::ChangeServerReq.Parser, new[]{ "Sid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChangeServerResp), global::ChangeServerResp.Parser, new[]{ "Res" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///获取导流服务器
/// </summary>
public sealed partial class GetServerReq : pb::IMessage<GetServerReq> {
  private static readonly pb::MessageParser<GetServerReq> _parser = new pb::MessageParser<GetServerReq>(() => new GetServerReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetServerReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetServerReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetServerReq(GetServerReq other) : this() {
    code_ = other.code_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetServerReq Clone() {
    return new GetServerReq(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private string code_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetServerReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetServerReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Code.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Code);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetServerReq other) {
    if (other == null) {
      return;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Code = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetServerResp : pb::IMessage<GetServerResp> {
  private static readonly pb::MessageParser<GetServerResp> _parser = new pb::MessageParser<GetServerResp>(() => new GetServerResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetServerResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetServerResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetServerResp(GetServerResp other) : this() {
    Server = other.server_ != null ? other.Server.Clone() : null;
    PlatUser = other.platUser_ != null ? other.PlatUser.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetServerResp Clone() {
    return new GetServerResp(this);
  }

  /// <summary>Field number for the "server" field.</summary>
  public const int ServerFieldNumber = 1;
  private global::ServerPb server_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerPb Server {
    get { return server_; }
    set {
      server_ = value;
    }
  }

  /// <summary>Field number for the "platUser" field.</summary>
  public const int PlatUserFieldNumber = 2;
  private global::PlatformUserPb platUser_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlatformUserPb PlatUser {
    get { return platUser_; }
    set {
      platUser_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetServerResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetServerResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Server, other.Server)) return false;
    if (!object.Equals(PlatUser, other.PlatUser)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (server_ != null) hash ^= Server.GetHashCode();
    if (platUser_ != null) hash ^= PlatUser.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (server_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Server);
    }
    if (platUser_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PlatUser);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (server_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Server);
    }
    if (platUser_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlatUser);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetServerResp other) {
    if (other == null) {
      return;
    }
    if (other.server_ != null) {
      if (server_ == null) {
        server_ = new global::ServerPb();
      }
      Server.MergeFrom(other.Server);
    }
    if (other.platUser_ != null) {
      if (platUser_ == null) {
        platUser_ = new global::PlatformUserPb();
      }
      PlatUser.MergeFrom(other.PlatUser);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (server_ == null) {
            server_ = new global::ServerPb();
          }
          input.ReadMessage(server_);
          break;
        }
        case 18: {
          if (platUser_ == null) {
            platUser_ = new global::PlatformUserPb();
          }
          input.ReadMessage(platUser_);
          break;
        }
      }
    }
  }

}

/// <summary>
///服务器列表
/// </summary>
public sealed partial class ServerListReq : pb::IMessage<ServerListReq> {
  private static readonly pb::MessageParser<ServerListReq> _parser = new pb::MessageParser<ServerListReq>(() => new ServerListReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerListReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerListReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerListReq(ServerListReq other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerListReq Clone() {
    return new ServerListReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerListReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerListReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerListReq other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class ServerListResp : pb::IMessage<ServerListResp> {
  private static readonly pb::MessageParser<ServerListResp> _parser = new pb::MessageParser<ServerListResp>(() => new ServerListResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerListResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerListResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerListResp(ServerListResp other) : this() {
    serverList_ = other.serverList_.Clone();
    myList_ = other.myList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerListResp Clone() {
    return new ServerListResp(this);
  }

  /// <summary>Field number for the "serverList" field.</summary>
  public const int ServerListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ServerPb> _repeated_serverList_codec
      = pb::FieldCodec.ForMessage(10, global::ServerPb.Parser);
  private readonly pbc::RepeatedField<global::ServerPb> serverList_ = new pbc::RepeatedField<global::ServerPb>();
  /// <summary>
  ///服务器列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ServerPb> ServerList {
    get { return serverList_; }
  }

  /// <summary>Field number for the "myList" field.</summary>
  public const int MyListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::ServerPb> _repeated_myList_codec
      = pb::FieldCodec.ForMessage(18, global::ServerPb.Parser);
  private readonly pbc::RepeatedField<global::ServerPb> myList_ = new pbc::RepeatedField<global::ServerPb>();
  /// <summary>
  ///我的服务器列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ServerPb> MyList {
    get { return myList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerListResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerListResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!serverList_.Equals(other.serverList_)) return false;
    if(!myList_.Equals(other.myList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= serverList_.GetHashCode();
    hash ^= myList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    serverList_.WriteTo(output, _repeated_serverList_codec);
    myList_.WriteTo(output, _repeated_myList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += serverList_.CalculateSize(_repeated_serverList_codec);
    size += myList_.CalculateSize(_repeated_myList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerListResp other) {
    if (other == null) {
      return;
    }
    serverList_.Add(other.serverList_);
    myList_.Add(other.myList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          serverList_.AddEntriesFrom(input, _repeated_serverList_codec);
          break;
        }
        case 18: {
          myList_.AddEntriesFrom(input, _repeated_myList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///上报创角打点
/// </summary>
public sealed partial class ServerCreateRoleReq : pb::IMessage<ServerCreateRoleReq> {
  private static readonly pb::MessageParser<ServerCreateRoleReq> _parser = new pb::MessageParser<ServerCreateRoleReq>(() => new ServerCreateRoleReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerCreateRoleReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerCreateRoleReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerCreateRoleReq(ServerCreateRoleReq other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerCreateRoleReq Clone() {
    return new ServerCreateRoleReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerCreateRoleReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerCreateRoleReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerCreateRoleReq other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class ServerCreateRoleResp : pb::IMessage<ServerCreateRoleResp> {
  private static readonly pb::MessageParser<ServerCreateRoleResp> _parser = new pb::MessageParser<ServerCreateRoleResp>(() => new ServerCreateRoleResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerCreateRoleResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerCreateRoleResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerCreateRoleResp(ServerCreateRoleResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerCreateRoleResp Clone() {
    return new ServerCreateRoleResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerCreateRoleResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerCreateRoleResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerCreateRoleResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///切换服务器
/// </summary>
public sealed partial class ChangeServerReq : pb::IMessage<ChangeServerReq> {
  private static readonly pb::MessageParser<ChangeServerReq> _parser = new pb::MessageParser<ChangeServerReq>(() => new ChangeServerReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChangeServerReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeServerReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeServerReq(ChangeServerReq other) : this() {
    sid_ = other.sid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeServerReq Clone() {
    return new ChangeServerReq(this);
  }

  /// <summary>Field number for the "sid" field.</summary>
  public const int SidFieldNumber = 1;
  private int sid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Sid {
    get { return sid_; }
    set {
      sid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChangeServerReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChangeServerReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sid != other.Sid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Sid != 0) hash ^= Sid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Sid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Sid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Sid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChangeServerReq other) {
    if (other == null) {
      return;
    }
    if (other.Sid != 0) {
      Sid = other.Sid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Sid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ChangeServerResp : pb::IMessage<ChangeServerResp> {
  private static readonly pb::MessageParser<ChangeServerResp> _parser = new pb::MessageParser<ChangeServerResp>(() => new ChangeServerResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChangeServerResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeServerResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeServerResp(ChangeServerResp other) : this() {
    res_ = other.res_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeServerResp Clone() {
    return new ChangeServerResp(this);
  }

  /// <summary>Field number for the "res" field.</summary>
  public const int ResFieldNumber = 1;
  private string res_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Res {
    get { return res_; }
    set {
      res_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChangeServerResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChangeServerResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Res != other.Res) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Res.Length != 0) hash ^= Res.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Res.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Res);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Res.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Res);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChangeServerResp other) {
    if (other == null) {
      return;
    }
    if (other.Res.Length != 0) {
      Res = other.Res;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Res = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
