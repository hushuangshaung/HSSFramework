// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reward.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from reward.proto</summary>
public static partial class RewardReflection {

  #region Descriptor
  /// <summary>File descriptor for reward.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RewardReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxyZXdhcmQucHJvdG8ilAEKD1N1cnByaXNlQm94UmVzcBI0CgpjaGFuZ2VJ",
          "dGVtGAEgAygLMiAuU3VycHJpc2VCb3hSZXNwLkNoYW5nZUl0ZW1FbnRyeRIY",
          "ChBzdXJwcmlzZUJveFRpbWVzGAIgASgFGjEKD0NoYW5nZUl0ZW1FbnRyeRIL",
          "CgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIhkKC0FkUmV3YXJkUmVx",
          "EgoKAmlkGAEgASgFIo8BCgxBZFJld2FyZFJlc3ASMQoKY2hhbmdlSXRlbRgB",
          "IAMoCzIdLkFkUmV3YXJkUmVzcC5DaGFuZ2VJdGVtRW50cnkSCgoCaWQYAiAB",
          "KAUSDQoFdGltZXMYAyABKAUaMQoPQ2hhbmdlSXRlbUVudHJ5EgsKA2tleRgB",
          "IAEoBRINCgV2YWx1ZRgCIAEoBToCOAFCFgoKY29tLmNiLm1zZ0IIUEJSZXdh",
          "cmRiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::SurpriseBoxResp), global::SurpriseBoxResp.Parser, new[]{ "ChangeItem", "SurpriseBoxTimes" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::AdRewardReq), global::AdRewardReq.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AdRewardResp), global::AdRewardResp.Parser, new[]{ "ChangeItem", "Id", "Times" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///惊喜宝箱领奖 --req nil
/// </summary>
public sealed partial class SurpriseBoxResp : pb::IMessage<SurpriseBoxResp> {
  private static readonly pb::MessageParser<SurpriseBoxResp> _parser = new pb::MessageParser<SurpriseBoxResp>(() => new SurpriseBoxResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SurpriseBoxResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RewardReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SurpriseBoxResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SurpriseBoxResp(SurpriseBoxResp other) : this() {
    changeItem_ = other.changeItem_.Clone();
    surpriseBoxTimes_ = other.surpriseBoxTimes_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SurpriseBoxResp Clone() {
    return new SurpriseBoxResp(this);
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  /// <summary>Field number for the "surpriseBoxTimes" field.</summary>
  public const int SurpriseBoxTimesFieldNumber = 2;
  private int surpriseBoxTimes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SurpriseBoxTimes {
    get { return surpriseBoxTimes_; }
    set {
      surpriseBoxTimes_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SurpriseBoxResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SurpriseBoxResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    if (SurpriseBoxTimes != other.SurpriseBoxTimes) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ChangeItem.GetHashCode();
    if (SurpriseBoxTimes != 0) hash ^= SurpriseBoxTimes.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    changeItem_.WriteTo(output, _map_changeItem_codec);
    if (SurpriseBoxTimes != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SurpriseBoxTimes);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    if (SurpriseBoxTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SurpriseBoxTimes);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SurpriseBoxResp other) {
    if (other == null) {
      return;
    }
    changeItem_.Add(other.changeItem_);
    if (other.SurpriseBoxTimes != 0) {
      SurpriseBoxTimes = other.SurpriseBoxTimes;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
        case 16: {
          SurpriseBoxTimes = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///看广告获取奖励道具 
/// </summary>
public sealed partial class AdRewardReq : pb::IMessage<AdRewardReq> {
  private static readonly pb::MessageParser<AdRewardReq> _parser = new pb::MessageParser<AdRewardReq>(() => new AdRewardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AdRewardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RewardReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AdRewardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AdRewardReq(AdRewardReq other) : this() {
    id_ = other.id_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AdRewardReq Clone() {
    return new AdRewardReq(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  ///广告id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AdRewardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AdRewardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AdRewardReq other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class AdRewardResp : pb::IMessage<AdRewardResp> {
  private static readonly pb::MessageParser<AdRewardResp> _parser = new pb::MessageParser<AdRewardResp>(() => new AdRewardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AdRewardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RewardReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AdRewardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AdRewardResp(AdRewardResp other) : this() {
    changeItem_ = other.changeItem_.Clone();
    id_ = other.id_;
    times_ = other.times_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AdRewardResp Clone() {
    return new AdRewardResp(this);
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int TimesFieldNumber = 3;
  private int times_;
  /// <summary>
  ///当日领取次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Times {
    get { return times_; }
    set {
      times_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AdRewardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AdRewardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    if (Id != other.Id) return false;
    if (Times != other.Times) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ChangeItem.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Times != 0) hash ^= Times.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    changeItem_.WriteTo(output, _map_changeItem_codec);
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (Times != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Times);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AdRewardResp other) {
    if (other == null) {
      return;
    }
    changeItem_.Add(other.changeItem_);
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Times != 0) {
      Times = other.Times;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          Times = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
