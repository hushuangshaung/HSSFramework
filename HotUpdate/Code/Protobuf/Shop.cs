// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shop.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from shop.proto</summary>
public static partial class ShopReflection {

  #region Descriptor
  /// <summary>File descriptor for shop.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ShopReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpzaG9wLnByb3RvIhEKD1Nob3BCdXlUaW1lc1JlcCJtChBTaG9wQnV5VGlt",
          "ZXNSZXNwEisKBXRpbWVzGAEgAygLMhwuU2hvcEJ1eVRpbWVzUmVzcC5UaW1l",
          "c0VudHJ5GiwKClRpbWVzRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIg",
          "ASgFOgI4ASIpCgpTaG9wQnV5UmVxEg4KBmdvb2RpZBgBIAEoBRILCgNudW0Y",
          "AiABKAUikwEKC1Nob3BCdXlSZXNwEg4KBmdvb2RpZBgBIAEoBRIPCgdnb29k",
          "bnVtGAIgASgFEjAKCmNoYW5nZUl0ZW0YAyADKAsyHC5TaG9wQnV5UmVzcC5D",
          "aGFuZ2VJdGVtRW50cnkaMQoPQ2hhbmdlSXRlbUVudHJ5EgsKA2tleRgBIAEo",
          "BRINCgV2YWx1ZRgCIAEoBToCOAFCFAoKY29tLmNiLm1zZ0IGUEJTaG9wYgZw",
          "cm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ShopBuyTimesRep), global::ShopBuyTimesRep.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ShopBuyTimesResp), global::ShopBuyTimesResp.Parser, new[]{ "Times" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::ShopBuyReq), global::ShopBuyReq.Parser, new[]{ "Goodid", "Num" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ShopBuyResp), global::ShopBuyResp.Parser, new[]{ "Goodid", "Goodnum", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ShopBuyTimesRep : pb::IMessage<ShopBuyTimesRep> {
  private static readonly pb::MessageParser<ShopBuyTimesRep> _parser = new pb::MessageParser<ShopBuyTimesRep>(() => new ShopBuyTimesRep());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ShopBuyTimesRep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ShopReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyTimesRep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyTimesRep(ShopBuyTimesRep other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyTimesRep Clone() {
    return new ShopBuyTimesRep(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ShopBuyTimesRep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ShopBuyTimesRep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ShopBuyTimesRep other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///商品购买次数
/// </summary>
public sealed partial class ShopBuyTimesResp : pb::IMessage<ShopBuyTimesResp> {
  private static readonly pb::MessageParser<ShopBuyTimesResp> _parser = new pb::MessageParser<ShopBuyTimesResp>(() => new ShopBuyTimesResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ShopBuyTimesResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ShopReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyTimesResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyTimesResp(ShopBuyTimesResp other) : this() {
    times_ = other.times_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyTimesResp Clone() {
    return new ShopBuyTimesResp(this);
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int TimesFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_times_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
  private readonly pbc::MapField<int, int> times_ = new pbc::MapField<int, int>();
  /// <summary>
  ///商品购买次数 k 商品id ; v 当日购买次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> Times {
    get { return times_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ShopBuyTimesResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ShopBuyTimesResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Times.Equals(other.Times)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Times.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    times_.WriteTo(output, _map_times_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += times_.CalculateSize(_map_times_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ShopBuyTimesResp other) {
    if (other == null) {
      return;
    }
    times_.Add(other.times_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          times_.AddEntriesFrom(input, _map_times_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///商品购买
/// </summary>
public sealed partial class ShopBuyReq : pb::IMessage<ShopBuyReq> {
  private static readonly pb::MessageParser<ShopBuyReq> _parser = new pb::MessageParser<ShopBuyReq>(() => new ShopBuyReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ShopBuyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ShopReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyReq(ShopBuyReq other) : this() {
    goodid_ = other.goodid_;
    num_ = other.num_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyReq Clone() {
    return new ShopBuyReq(this);
  }

  /// <summary>Field number for the "goodid" field.</summary>
  public const int GoodidFieldNumber = 1;
  private int goodid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Goodid {
    get { return goodid_; }
    set {
      goodid_ = value;
    }
  }

  /// <summary>Field number for the "num" field.</summary>
  public const int NumFieldNumber = 2;
  private int num_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Num {
    get { return num_; }
    set {
      num_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ShopBuyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ShopBuyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Goodid != other.Goodid) return false;
    if (Num != other.Num) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Goodid != 0) hash ^= Goodid.GetHashCode();
    if (Num != 0) hash ^= Num.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Goodid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Goodid);
    }
    if (Num != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Num);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Goodid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Goodid);
    }
    if (Num != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ShopBuyReq other) {
    if (other == null) {
      return;
    }
    if (other.Goodid != 0) {
      Goodid = other.Goodid;
    }
    if (other.Num != 0) {
      Num = other.Num;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Goodid = input.ReadInt32();
          break;
        }
        case 16: {
          Num = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ShopBuyResp : pb::IMessage<ShopBuyResp> {
  private static readonly pb::MessageParser<ShopBuyResp> _parser = new pb::MessageParser<ShopBuyResp>(() => new ShopBuyResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ShopBuyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ShopReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyResp(ShopBuyResp other) : this() {
    goodid_ = other.goodid_;
    goodnum_ = other.goodnum_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ShopBuyResp Clone() {
    return new ShopBuyResp(this);
  }

  /// <summary>Field number for the "goodid" field.</summary>
  public const int GoodidFieldNumber = 1;
  private int goodid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Goodid {
    get { return goodid_; }
    set {
      goodid_ = value;
    }
  }

  /// <summary>Field number for the "goodnum" field.</summary>
  public const int GoodnumFieldNumber = 2;
  private int goodnum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Goodnum {
    get { return goodnum_; }
    set {
      goodnum_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 3;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ShopBuyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ShopBuyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Goodid != other.Goodid) return false;
    if (Goodnum != other.Goodnum) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Goodid != 0) hash ^= Goodid.GetHashCode();
    if (Goodnum != 0) hash ^= Goodnum.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Goodid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Goodid);
    }
    if (Goodnum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Goodnum);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Goodid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Goodid);
    }
    if (Goodnum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Goodnum);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ShopBuyResp other) {
    if (other == null) {
      return;
    }
    if (other.Goodid != 0) {
      Goodid = other.Goodid;
    }
    if (other.Goodnum != 0) {
      Goodnum = other.Goodnum;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Goodid = input.ReadInt32();
          break;
        }
        case 16: {
          Goodnum = input.ReadInt32();
          break;
        }
        case 26: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
