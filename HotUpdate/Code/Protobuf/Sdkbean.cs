// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdkbean.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from sdkbean.proto</summary>
public static partial class SdkbeanReflection {

  #region Descriptor
  /// <summary>File descriptor for sdkbean.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SdkbeanReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1zZGtiZWFuLnByb3RvIocBChJQYXltZW50T3JkZXJJdGVtUGISDAoEY29k",
          "ZRgBIAEoCRIMCgRuYW1lGAIgASgJEgsKA2FtdBgDIAEoARIQCghjdXJyZW5j",
          "eRgEIAEoCRIMCgRkZXNjGAUgASgJEgsKA3F0eRgGIAEoBRIOCgZ0YXhhbXQY",
          "ByABKAUSCwoDdXJsGAggASgJIs0BCg9QYXltZW50Q3VzdG9tUGISFgoOZ2Ft",
          "ZV9zZXJ2ZXJfaWQYASABKAkSEQoJaXRlbV90eXBlGAIgASgJEg8KB3JvbGVf",
          "aWQYAyABKAkSEgoKcm9sZV9sZXZlbBgEIAEoCRIWCg5yb2xlX3ZpcF9sZXZl",
          "bBgFIAEoCRIOCgZyZWFzb24YBiABKAkSHwoXdmlydHVhbF9jdXJyZW5jeV9h",
          "bW91bnQYByABKAkSEgoKbm90aWZ5X3VybBgIIAEoCRINCgVjdHdpZBgJIAEo",
          "CUIbChdjb20uY2IubXNnLmJlYW4uc2RrYmVhblABYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PaymentOrderItemPb), global::PaymentOrderItemPb.Parser, new[]{ "Code", "Name", "Amt", "Currency", "Desc", "Qty", "Taxamt", "Url" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PaymentCustomPb), global::PaymentCustomPb.Parser, new[]{ "GameServerId", "ItemType", "RoleId", "RoleLevel", "RoleVipLevel", "Reason", "VirtualCurrencyAmount", "NotifyUrl", "Ctwid" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PaymentOrderItemPb : pb::IMessage<PaymentOrderItemPb> {
  private static readonly pb::MessageParser<PaymentOrderItemPb> _parser = new pb::MessageParser<PaymentOrderItemPb>(() => new PaymentOrderItemPb());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PaymentOrderItemPb> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SdkbeanReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PaymentOrderItemPb() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PaymentOrderItemPb(PaymentOrderItemPb other) : this() {
    code_ = other.code_;
    name_ = other.name_;
    amt_ = other.amt_;
    currency_ = other.currency_;
    desc_ = other.desc_;
    qty_ = other.qty_;
    taxamt_ = other.taxamt_;
    url_ = other.url_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PaymentOrderItemPb Clone() {
    return new PaymentOrderItemPb(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private string code_ = "";
  /// <summary>
  ///商品代码  即ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  /// <summary>
  ///商品名称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "amt" field.</summary>
  public const int AmtFieldNumber = 3;
  private double amt_;
  /// <summary>
  ///商品价格
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Amt {
    get { return amt_; }
    set {
      amt_ = value;
    }
  }

  /// <summary>Field number for the "currency" field.</summary>
  public const int CurrencyFieldNumber = 4;
  private string currency_ = "";
  /// <summary>
  ///币种
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Currency {
    get { return currency_; }
    set {
      currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "desc" field.</summary>
  public const int DescFieldNumber = 5;
  private string desc_ = "";
  /// <summary>
  ///商品简介
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Desc {
    get { return desc_; }
    set {
      desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "qty" field.</summary>
  public const int QtyFieldNumber = 6;
  private int qty_;
  /// <summary>
  ///商品数量（虚拟电子产品必须为 1）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Qty {
    get { return qty_; }
    set {
      qty_ = value;
    }
  }

  /// <summary>Field number for the "taxamt" field.</summary>
  public const int TaxamtFieldNumber = 7;
  private int taxamt_;
  /// <summary>
  ///税额（可以把税额含入 amt 之中，并把此值赋 0）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Taxamt {
    get { return taxamt_; }
    set {
      taxamt_ = value;
    }
  }

  /// <summary>Field number for the "url" field.</summary>
  public const int UrlFieldNumber = 8;
  private string url_ = "";
  /// <summary>
  ///商品 URL
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Url {
    get { return url_; }
    set {
      url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PaymentOrderItemPb);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PaymentOrderItemPb other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (Name != other.Name) return false;
    if (Amt != other.Amt) return false;
    if (Currency != other.Currency) return false;
    if (Desc != other.Desc) return false;
    if (Qty != other.Qty) return false;
    if (Taxamt != other.Taxamt) return false;
    if (Url != other.Url) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Amt != 0D) hash ^= Amt.GetHashCode();
    if (Currency.Length != 0) hash ^= Currency.GetHashCode();
    if (Desc.Length != 0) hash ^= Desc.GetHashCode();
    if (Qty != 0) hash ^= Qty.GetHashCode();
    if (Taxamt != 0) hash ^= Taxamt.GetHashCode();
    if (Url.Length != 0) hash ^= Url.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Code.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Code);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Amt != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Amt);
    }
    if (Currency.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Currency);
    }
    if (Desc.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Desc);
    }
    if (Qty != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Qty);
    }
    if (Taxamt != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Taxamt);
    }
    if (Url.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Url);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Amt != 0D) {
      size += 1 + 8;
    }
    if (Currency.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
    }
    if (Desc.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
    }
    if (Qty != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty);
    }
    if (Taxamt != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Taxamt);
    }
    if (Url.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PaymentOrderItemPb other) {
    if (other == null) {
      return;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Amt != 0D) {
      Amt = other.Amt;
    }
    if (other.Currency.Length != 0) {
      Currency = other.Currency;
    }
    if (other.Desc.Length != 0) {
      Desc = other.Desc;
    }
    if (other.Qty != 0) {
      Qty = other.Qty;
    }
    if (other.Taxamt != 0) {
      Taxamt = other.Taxamt;
    }
    if (other.Url.Length != 0) {
      Url = other.Url;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Code = input.ReadString();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 25: {
          Amt = input.ReadDouble();
          break;
        }
        case 34: {
          Currency = input.ReadString();
          break;
        }
        case 42: {
          Desc = input.ReadString();
          break;
        }
        case 48: {
          Qty = input.ReadInt32();
          break;
        }
        case 56: {
          Taxamt = input.ReadInt32();
          break;
        }
        case 66: {
          Url = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class PaymentCustomPb : pb::IMessage<PaymentCustomPb> {
  private static readonly pb::MessageParser<PaymentCustomPb> _parser = new pb::MessageParser<PaymentCustomPb>(() => new PaymentCustomPb());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PaymentCustomPb> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SdkbeanReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PaymentCustomPb() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PaymentCustomPb(PaymentCustomPb other) : this() {
    gameServerId_ = other.gameServerId_;
    itemType_ = other.itemType_;
    roleId_ = other.roleId_;
    roleLevel_ = other.roleLevel_;
    roleVipLevel_ = other.roleVipLevel_;
    reason_ = other.reason_;
    virtualCurrencyAmount_ = other.virtualCurrencyAmount_;
    notifyUrl_ = other.notifyUrl_;
    ctwid_ = other.ctwid_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PaymentCustomPb Clone() {
    return new PaymentCustomPb(this);
  }

  /// <summary>Field number for the "game_server_id" field.</summary>
  public const int GameServerIdFieldNumber = 1;
  private string gameServerId_ = "";
  /// <summary>
  ///	游戏服务器
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameServerId {
    get { return gameServerId_; }
    set {
      gameServerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "item_type" field.</summary>
  public const int ItemTypeFieldNumber = 2;
  private string itemType_ = "";
  /// <summary>
  ///道具类型(pass/fund/item/gift)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ItemType {
    get { return itemType_; }
    set {
      itemType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "role_id" field.</summary>
  public const int RoleIdFieldNumber = 3;
  private string roleId_ = "";
  /// <summary>
  ///	角色 ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleId {
    get { return roleId_; }
    set {
      roleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "role_level" field.</summary>
  public const int RoleLevelFieldNumber = 4;
  private string roleLevel_ = "";
  /// <summary>
  ///	角色等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleLevel {
    get { return roleLevel_; }
    set {
      roleLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "role_vip_level" field.</summary>
  public const int RoleVipLevelFieldNumber = 5;
  private string roleVipLevel_ = "";
  /// <summary>
  ///	角色 VIP 等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleVipLevel {
    get { return roleVipLevel_; }
    set {
      roleVipLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 6;
  private string reason_ = "";
  /// <summary>
  ///	充值原因,活动等
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Reason {
    get { return reason_; }
    set {
      reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "virtual_currency_amount" field.</summary>
  public const int VirtualCurrencyAmountFieldNumber = 7;
  private string virtualCurrencyAmount_ = "";
  /// <summary>
  ///	获得虚拟币数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VirtualCurrencyAmount {
    get { return virtualCurrencyAmount_; }
    set {
      virtualCurrencyAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "notify_url" field.</summary>
  public const int NotifyUrlFieldNumber = 8;
  private string notifyUrl_ = "";
  /// <summary>
  ///	订单通知的回调地址
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NotifyUrl {
    get { return notifyUrl_; }
    set {
      notifyUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ctwid" field.</summary>
  public const int CtwidFieldNumber = 9;
  private string ctwid_ = "";
  /// <summary>
  ///	G123 ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Ctwid {
    get { return ctwid_; }
    set {
      ctwid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PaymentCustomPb);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PaymentCustomPb other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GameServerId != other.GameServerId) return false;
    if (ItemType != other.ItemType) return false;
    if (RoleId != other.RoleId) return false;
    if (RoleLevel != other.RoleLevel) return false;
    if (RoleVipLevel != other.RoleVipLevel) return false;
    if (Reason != other.Reason) return false;
    if (VirtualCurrencyAmount != other.VirtualCurrencyAmount) return false;
    if (NotifyUrl != other.NotifyUrl) return false;
    if (Ctwid != other.Ctwid) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GameServerId.Length != 0) hash ^= GameServerId.GetHashCode();
    if (ItemType.Length != 0) hash ^= ItemType.GetHashCode();
    if (RoleId.Length != 0) hash ^= RoleId.GetHashCode();
    if (RoleLevel.Length != 0) hash ^= RoleLevel.GetHashCode();
    if (RoleVipLevel.Length != 0) hash ^= RoleVipLevel.GetHashCode();
    if (Reason.Length != 0) hash ^= Reason.GetHashCode();
    if (VirtualCurrencyAmount.Length != 0) hash ^= VirtualCurrencyAmount.GetHashCode();
    if (NotifyUrl.Length != 0) hash ^= NotifyUrl.GetHashCode();
    if (Ctwid.Length != 0) hash ^= Ctwid.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GameServerId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GameServerId);
    }
    if (ItemType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ItemType);
    }
    if (RoleId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RoleId);
    }
    if (RoleLevel.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RoleLevel);
    }
    if (RoleVipLevel.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(RoleVipLevel);
    }
    if (Reason.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Reason);
    }
    if (VirtualCurrencyAmount.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(VirtualCurrencyAmount);
    }
    if (NotifyUrl.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(NotifyUrl);
    }
    if (Ctwid.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Ctwid);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GameServerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerId);
    }
    if (ItemType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemType);
    }
    if (RoleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleId);
    }
    if (RoleLevel.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleLevel);
    }
    if (RoleVipLevel.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleVipLevel);
    }
    if (Reason.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
    }
    if (VirtualCurrencyAmount.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VirtualCurrencyAmount);
    }
    if (NotifyUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifyUrl);
    }
    if (Ctwid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Ctwid);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PaymentCustomPb other) {
    if (other == null) {
      return;
    }
    if (other.GameServerId.Length != 0) {
      GameServerId = other.GameServerId;
    }
    if (other.ItemType.Length != 0) {
      ItemType = other.ItemType;
    }
    if (other.RoleId.Length != 0) {
      RoleId = other.RoleId;
    }
    if (other.RoleLevel.Length != 0) {
      RoleLevel = other.RoleLevel;
    }
    if (other.RoleVipLevel.Length != 0) {
      RoleVipLevel = other.RoleVipLevel;
    }
    if (other.Reason.Length != 0) {
      Reason = other.Reason;
    }
    if (other.VirtualCurrencyAmount.Length != 0) {
      VirtualCurrencyAmount = other.VirtualCurrencyAmount;
    }
    if (other.NotifyUrl.Length != 0) {
      NotifyUrl = other.NotifyUrl;
    }
    if (other.Ctwid.Length != 0) {
      Ctwid = other.Ctwid;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          GameServerId = input.ReadString();
          break;
        }
        case 18: {
          ItemType = input.ReadString();
          break;
        }
        case 26: {
          RoleId = input.ReadString();
          break;
        }
        case 34: {
          RoleLevel = input.ReadString();
          break;
        }
        case 42: {
          RoleVipLevel = input.ReadString();
          break;
        }
        case 50: {
          Reason = input.ReadString();
          break;
        }
        case 58: {
          VirtualCurrencyAmount = input.ReadString();
          break;
        }
        case 66: {
          NotifyUrl = input.ReadString();
          break;
        }
        case 74: {
          Ctwid = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
