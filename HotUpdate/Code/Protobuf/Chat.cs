// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from chat.proto</summary>
public static partial class ChatReflection {

  #region Descriptor
  /// <summary>File descriptor for chat.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ChatReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpjaGF0LnByb3RvGgpiZWFuLnByb3RvIioKCkNoYXRNc2dSZXESDwoHY2hh",
          "bm5lbBgBIAEoBRILCgNtc2cYAiABKAkiIwoLQ2hhdE1zZ1Jlc3ASFAoDbXNn",
          "GAEgASgLMgcuQ2hhdFBiIjUKEUNoYXRSZWNvcmRMaXN0UmVxEg8KB2ZpcnN0",
          "SWQYASABKAUSDwoHY2hhbm5lbBgCIAEoBSIxChJDaGF0UmVjb3JkTGlzdFJl",
          "c3ASGwoEbGlzdBgBIAEoCzINLkNoYXRSZWNvcmRQYkIUCgpjb20uY2IubXNn",
          "QgZQQkNoYXRiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BeanReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ChatMsgReq), global::ChatMsgReq.Parser, new[]{ "Channel", "Msg" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChatMsgResp), global::ChatMsgResp.Parser, new[]{ "Msg" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChatRecordListReq), global::ChatRecordListReq.Parser, new[]{ "FirstId", "Channel" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChatRecordListResp), global::ChatRecordListResp.Parser, new[]{ "List" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ChatMsgReq : pb::IMessage<ChatMsgReq> {
  private static readonly pb::MessageParser<ChatMsgReq> _parser = new pb::MessageParser<ChatMsgReq>(() => new ChatMsgReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChatMsgReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChatReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMsgReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMsgReq(ChatMsgReq other) : this() {
    channel_ = other.channel_;
    msg_ = other.msg_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMsgReq Clone() {
    return new ChatMsgReq(this);
  }

  /// <summary>Field number for the "channel" field.</summary>
  public const int ChannelFieldNumber = 1;
  private int channel_;
  /// <summary>
  ///聊天频道
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Channel {
    get { return channel_; }
    set {
      channel_ = value;
    }
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 2;
  private string msg_ = "";
  /// <summary>
  ///消息内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Msg {
    get { return msg_; }
    set {
      msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChatMsgReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChatMsgReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Channel != other.Channel) return false;
    if (Msg != other.Msg) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Channel != 0) hash ^= Channel.GetHashCode();
    if (Msg.Length != 0) hash ^= Msg.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Channel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Channel);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Msg);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Channel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
    }
    if (Msg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChatMsgReq other) {
    if (other == null) {
      return;
    }
    if (other.Channel != 0) {
      Channel = other.Channel;
    }
    if (other.Msg.Length != 0) {
      Msg = other.Msg;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Channel = input.ReadInt32();
          break;
        }
        case 18: {
          Msg = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ChatMsgResp : pb::IMessage<ChatMsgResp> {
  private static readonly pb::MessageParser<ChatMsgResp> _parser = new pb::MessageParser<ChatMsgResp>(() => new ChatMsgResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChatMsgResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChatReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMsgResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMsgResp(ChatMsgResp other) : this() {
    Msg = other.msg_ != null ? other.Msg.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMsgResp Clone() {
    return new ChatMsgResp(this);
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 1;
  private global::ChatPb msg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ChatPb Msg {
    get { return msg_; }
    set {
      msg_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChatMsgResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChatMsgResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Msg, other.Msg)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (msg_ != null) hash ^= Msg.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (msg_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Msg);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (msg_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Msg);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChatMsgResp other) {
    if (other == null) {
      return;
    }
    if (other.msg_ != null) {
      if (msg_ == null) {
        msg_ = new global::ChatPb();
      }
      Msg.MergeFrom(other.Msg);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (msg_ == null) {
            msg_ = new global::ChatPb();
          }
          input.ReadMessage(msg_);
          break;
        }
      }
    }
  }

}

public sealed partial class ChatRecordListReq : pb::IMessage<ChatRecordListReq> {
  private static readonly pb::MessageParser<ChatRecordListReq> _parser = new pb::MessageParser<ChatRecordListReq>(() => new ChatRecordListReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChatRecordListReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChatReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatRecordListReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatRecordListReq(ChatRecordListReq other) : this() {
    firstId_ = other.firstId_;
    channel_ = other.channel_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatRecordListReq Clone() {
    return new ChatRecordListReq(this);
  }

  /// <summary>Field number for the "firstId" field.</summary>
  public const int FirstIdFieldNumber = 1;
  private int firstId_;
  /// <summary>
  ///最早的一条消息ID  即列表内最上面的一条  用做分页游标（暂定）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstId {
    get { return firstId_; }
    set {
      firstId_ = value;
    }
  }

  /// <summary>Field number for the "channel" field.</summary>
  public const int ChannelFieldNumber = 2;
  private int channel_;
  /// <summary>
  ///聊天频道
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Channel {
    get { return channel_; }
    set {
      channel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChatRecordListReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChatRecordListReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FirstId != other.FirstId) return false;
    if (Channel != other.Channel) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FirstId != 0) hash ^= FirstId.GetHashCode();
    if (Channel != 0) hash ^= Channel.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FirstId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FirstId);
    }
    if (Channel != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Channel);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FirstId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstId);
    }
    if (Channel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChatRecordListReq other) {
    if (other == null) {
      return;
    }
    if (other.FirstId != 0) {
      FirstId = other.FirstId;
    }
    if (other.Channel != 0) {
      Channel = other.Channel;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          FirstId = input.ReadInt32();
          break;
        }
        case 16: {
          Channel = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ChatRecordListResp : pb::IMessage<ChatRecordListResp> {
  private static readonly pb::MessageParser<ChatRecordListResp> _parser = new pb::MessageParser<ChatRecordListResp>(() => new ChatRecordListResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChatRecordListResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChatReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatRecordListResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatRecordListResp(ChatRecordListResp other) : this() {
    List = other.list_ != null ? other.List.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatRecordListResp Clone() {
    return new ChatRecordListResp(this);
  }

  /// <summary>Field number for the "list" field.</summary>
  public const int ListFieldNumber = 1;
  private global::ChatRecordPb list_;
  /// <summary>
  ///消息列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ChatRecordPb List {
    get { return list_; }
    set {
      list_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChatRecordListResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChatRecordListResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(List, other.List)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (list_ != null) hash ^= List.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (list_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(List);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (list_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(List);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChatRecordListResp other) {
    if (other == null) {
      return;
    }
    if (other.list_ != null) {
      if (list_ == null) {
        list_ = new global::ChatRecordPb();
      }
      List.MergeFrom(other.List);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (list_ == null) {
            list_ = new global::ChatRecordPb();
          }
          input.ReadMessage(list_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
