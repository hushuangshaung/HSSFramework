
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg
{
	public sealed partial class GlobalData : Luban.BeanBase
	{
		public GlobalData(ByteBuf _buf) 
		{
			Id = _buf.ReadInt();
			Type = _buf.ReadString();
			{int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Values = new string[__n0][];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string[] __e0;{int __n1 = System.Math.Min(_buf.ReadSize(), _buf.Size);__e0 = new string[__n1];for(var __index1 = 0 ; __index1 < __n1 ; __index1++) { string __e1;__e1 = _buf.ReadString(); __e0[__index1] = __e1;}} Values[__index0] = __e0;}}
		}

		public static GlobalData DeserializeGlobalData(ByteBuf _buf)
		{
			return new GlobalData(_buf);
		}

		/// <summary>
		/// 编号
		/// </summary>
		public readonly int Id;
		/// <summary>
		/// 类型
		/// </summary>
		public readonly string Type;
		/// <summary>
		/// 二维数组
		/// </summary>
		public readonly string[][] Values;
	   
		public const int __ID__ = 1134213645;
		public override int GetTypeId() => __ID__;

		public  void ResolveRef(Tables tables)
		{
		}

		public override string ToString()
		{
			return "{ "
			+ "id:" + Id + ","
			+ "type:" + Type + ","
			+ "values:" + Luban.StringUtil.CollectionToString(Values) + ","
			+ "}";
		}
	}

}

